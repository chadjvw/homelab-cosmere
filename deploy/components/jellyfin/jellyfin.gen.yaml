apiVersion: v1
kind: Service
metadata:
  annotations:
    lbipam.cilium.io/ips: 192.168.5.7
  labels:
    app.kubernetes.io/instance: jellyfin
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: jellyfin
    app.kubernetes.io/service: jellyfin
    helm.sh/chart: app-template-4.2.0
  name: jellyfin
  namespace: default
spec:
  loadBalancerClass: io.cilium/l2-announcer
  ports:
  - name: http
    port: 8096
    protocol: TCP
    targetPort: 8096
  selector:
    app.kubernetes.io/controller: main
    app.kubernetes.io/instance: jellyfin
    app.kubernetes.io/name: jellyfin
  type: LoadBalancer
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jellyfin-cache
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: piraeus-storage-file
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jellyfin-data
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: piraeus-storage
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/controller: main
    app.kubernetes.io/instance: jellyfin
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: jellyfin
    helm.sh/chart: app-template-4.2.0
  name: jellyfin
  namespace: default
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/controller: main
      app.kubernetes.io/instance: jellyfin
      app.kubernetes.io/name: jellyfin
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/controller: main
        app.kubernetes.io/instance: jellyfin
        app.kubernetes.io/name: jellyfin
    spec:
      automountServiceAccountToken: true
      containers:
      - env:
        - name: PGID
          value: "1000"
        - name: PUID
          value: "1000"
        - name: TZ
          value: America/Denver
        image: ghcr.io/jellyfin/jellyfin:10.10.7
        name: main
        volumeMounts:
        - mountPath: /config/cache
          name: cache
        - mountPath: /config
          name: config
        - mountPath: /dev/dri
          name: dri
        - mountPath: /media/movies
          name: movies
        - mountPath: /transcode
          name: transcode
        - mountPath: /media/tv
          name: tv
      dnsPolicy: ClusterFirst
      enableServiceLinks: false
      hostIPC: false
      hostNetwork: false
      hostPID: false
      serviceAccountName: default
      volumes:
      - name: cache
        persistentVolumeClaim:
          claimName: jellyfin-cache
      - name: config
        persistentVolumeClaim:
          claimName: jellyfin-data
      - hostPath:
          path: /dev/dri
          type: Directory
        name: dri
      - name: movies
        nfs:
          path: /mnt/user/movies
          server: 192.168.4.101
      - emptyDir: {}
        name: transcode
      - name: tv
        nfs:
          path: /mnt/user/tv
          server: 192.168.4.101
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  labels:
    app.kubernetes.io/instance: jellyfin
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: jellyfin
    helm.sh/chart: app-template-4.2.0
  name: jellyfin
  namespace: default
spec:
  parentRefs:
  - group: gateway.networking.k8s.io
    kind: Gateway
    name: internal
    namespace: kube-system
    sectionName: https
  rules:
  - backendRefs:
    - group: ""
      kind: Service
      name: jellyfin
      namespace: default
      port: 8096
      weight: 1
