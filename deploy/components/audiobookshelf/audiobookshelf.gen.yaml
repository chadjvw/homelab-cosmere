apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: audiobookshelf
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: audiobookshelf
    app.kubernetes.io/service: audiobookshelf
    helm.sh/chart: app-template-4.3.0
  name: audiobookshelf
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app.kubernetes.io/controller: main
    app.kubernetes.io/instance: audiobookshelf
    app.kubernetes.io/name: audiobookshelf
  type: LoadBalancer
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: audiobookshelf-config
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: org.democratic-csi.iscsi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: audiobookshelf-metadata
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: org.democratic-csi.iscsi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/controller: main
    app.kubernetes.io/instance: audiobookshelf
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: audiobookshelf
    helm.sh/chart: app-template-4.3.0
  name: audiobookshelf
  namespace: default
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/controller: main
      app.kubernetes.io/instance: audiobookshelf
      app.kubernetes.io/name: audiobookshelf
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/controller: main
        app.kubernetes.io/instance: audiobookshelf
        app.kubernetes.io/name: audiobookshelf
    spec:
      automountServiceAccountToken: true
      containers:
      - env:
        - name: PGID
          value: "1000"
        - name: PUID
          value: "1000"
        - name: TZ
          value: America/Denver
        image: docker.io/kennethreitz/httpbin:latest
        name: main
        volumeMounts:
        - mountPath: /media/books
          name: books
        - mountPath: /config
          name: config
        - mountPath: /metadata
          name: metadata
      dnsPolicy: ClusterFirst
      enableServiceLinks: false
      hostIPC: false
      hostNetwork: false
      hostPID: false
      serviceAccountName: default
      volumes:
      - name: books
        nfs:
          path: /mnt/mongo/data/media/books
          server: truenas.vanwyhe.xyz
      - name: config
        persistentVolumeClaim:
          claimName: audiobookshelf-config
      - name: metadata
        persistentVolumeClaim:
          claimName: audiobookshelf-metadata
---
apiVersion: dns.gardener.cloud/v1alpha1
kind: DNSEntry
metadata:
  name: books-ext-dns
  namespace: default
spec:
  dnsName: k8s-books.vanwyhe.xyz
  targets:
  - home.vanwyhe.xyz
  ttl: 300
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  labels:
    app.kubernetes.io/instance: audiobookshelf
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: audiobookshelf
    helm.sh/chart: app-template-4.3.0
  name: audiobookshelf
  namespace: default
spec:
  hostnames:
  - k8s-audiobookshelf.vanwyhe.xyz
  parentRefs:
  - group: gateway.networking.k8s.io
    kind: Gateway
    name: external
    namespace: kube-system
    sectionName: https
  rules:
  - backendRefs:
    - group: ""
      kind: Service
      name: audiobookshelf
      namespace: default
      port: 80
      weight: 1
