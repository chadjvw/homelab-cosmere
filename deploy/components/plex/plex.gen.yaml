apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: plex
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: plex
    app.kubernetes.io/service: plex
    helm.sh/chart: app-template-4.3.0
  name: plex
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: http
    port: 32400
    protocol: TCP
    targetPort: 32400
  selector:
    app.kubernetes.io/controller: main
    app.kubernetes.io/instance: plex
    app.kubernetes.io/name: plex
  type: LoadBalancer
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: plex-config
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 40Gi
  storageClassName: org.democratic-csi.iscsi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/controller: main
    app.kubernetes.io/instance: plex
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: plex
    helm.sh/chart: app-template-4.3.0
  name: plex
  namespace: default
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/controller: main
      app.kubernetes.io/instance: plex
      app.kubernetes.io/name: plex
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/controller: main
        app.kubernetes.io/instance: plex
        app.kubernetes.io/name: plex
    spec:
      automountServiceAccountToken: true
      containers:
      - env:
        - name: ADVERTISE_IP
          value: https://plex.vanwyhe.xyz
        - name: PGID
          value: "1000"
        - name: PLEX_CLAIM
          valueFrom:
            secretKeyRef:
              key: PLEX_CLAIM
              name: plex-claim-token
        - name: PUID
          value: "1000"
        - name: TZ
          value: America/Denver
        - name: VERSION
          value: latest
        image: ghcr.io/linuxserver/plex:1.42.2
        name: main
        resources:
          limits:
            gpu.intel.com/i915: "1"
          requests:
            gpu.intel.com/i915: "1"
        volumeMounts:
        - mountPath: /config
          name: config
        - mountPath: /dev/dri
          name: dri
        - mountPath: /media/movies
          name: movies
        - mountPath: /media/music
          name: music
        - mountPath: /transcode
          name: transcode
        - mountPath: /media/tv
          name: tv
      dnsPolicy: ClusterFirst
      enableServiceLinks: false
      hostIPC: false
      hostNetwork: false
      hostPID: false
      serviceAccountName: default
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: plex-config
      - hostPath:
          path: /dev/dri
          type: Directory
        name: dri
      - name: movies
        nfs:
          path: /mnt/mongo/data/media/movies
          server: truenas.vanwyhe.xyz
      - name: music
        nfs:
          path: /mnt/mongo/data/media/music
          server: truenas.vanwyhe.xyz
      - emptyDir:
          medium: Memory
          sizeLimit: 4GiB
        name: transcode
      - name: tv
        nfs:
          path: /mnt/mongo/data/media/tv
          server: truenas.vanwyhe.xyz
---
apiVersion: dns.gardener.cloud/v1alpha1
kind: DNSEntry
metadata:
  name: plex-ext-dns
  namespace: default
spec:
  dnsName: k8s-plex.vanwyhe.xyz
  targets:
  - home.vanwyhe.xyz
  ttl: 300
---
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: plex-claim-token
  namespace: default
spec:
  data:
  - remoteRef:
      key: PLEX_CLAIM_TOKEN
    secretKey: PLEX_CLAIM_TOKEN
  secretStoreRef:
    kind: ClusterSecretStore
    name: doppler
  target:
    name: plex-claim-token
    template:
      data:
        PLEX_CLAIM: '{{ .PLEX_CLAIM_TOKEN }}'
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  labels:
    app.kubernetes.io/instance: plex
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: plex
    helm.sh/chart: app-template-4.3.0
  name: plex
  namespace: default
spec:
  hostnames:
  - plex.vanwyhe.xyz
  parentRefs:
  - group: gateway.networking.k8s.io
    kind: Gateway
    name: external
    namespace: kube-system
    sectionName: https
  rules:
  - backendRefs:
    - group: ""
      kind: Service
      name: plex
      namespace: default
      port: 32400
      weight: 1
