// Code generated by timoni. DO NOT EDIT.

//timoni:generate timoni mod vendor crd -f https://github.com/prometheus-community/helm-charts/raw/refs/heads/main/charts/kube-prometheus-stack/charts/crds/crds/crd-scrapeconfigs.yaml

package v1alpha1

import "strings"

// ScrapeConfig defines a namespaced Prometheus scrape_config to
// be aggregated across
// multiple namespaces into the Prometheus configuration.
#ScrapeConfig: {
	// APIVersion defines the versioned schema of this representation
	// of an object.
	// Servers should convert recognized schemas to the latest
	// internal value, and
	// may reject unrecognized values.
	// More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	apiVersion: "monitoring.coreos.com/v1alpha1"

	// Kind is a string value representing the REST resource this
	// object represents.
	// Servers may infer this from the endpoint the client submits
	// requests to.
	// Cannot be updated.
	// In CamelCase.
	// More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	kind: "ScrapeConfig"
	metadata!: {
		name!: strings.MaxRunes(253) & strings.MinRunes(1) & {
			string
		}
		namespace!: strings.MaxRunes(63) & strings.MinRunes(1) & {
			string
		}
		labels?: {
			[string]: string
		}
		annotations?: {
			[string]: string
		}
	}

	// ScrapeConfigSpec is a specification of the desired
	// configuration for a scrape configuration.
	spec!: #ScrapeConfigSpec
}

// ScrapeConfigSpec is a specification of the desired
// configuration for a scrape configuration.
#ScrapeConfigSpec: {
	// Authorization header to use on every scrape request.
	authorization?: {
		// Selects a key of a Secret in the namespace that contains the
		// credentials for authentication.
		credentials?: {
			// The key of the secret to select from. Must be a valid secret
			// key.
			key!: string

			// Name of the referent.
			// This field is effectively required, but due to backwards
			// compatibility is
			// allowed to be empty. Instances of this type with an empty value
			// here are
			// almost certainly wrong.
			// More info:
			// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
			name?: string

			// Specify whether the Secret or its key must be defined
			optional?: bool
		}

		// Defines the authentication type. The value is case-insensitive.
		//
		// "Basic" is not a supported value.
		//
		// Default: "Bearer"
		type?: string
	}

	// AzureSDConfigs defines a list of Azure service discovery
	// configurations.
	azureSDConfigs?: [...{
		// # The authentication method, either `OAuth` or
		// `ManagedIdentity` or `SDK`.
		// See
		// https://docs.microsoft.com/en-us/azure/active-directory/managed-identities-azure-resources/overview
		// SDK authentication method uses environment variables by
		// default.
		// See
		// https://learn.microsoft.com/en-us/azure/developer/go/azure-sdk-authentication
		authenticationMethod?: "OAuth" | "ManagedIdentity" | "SDK"

		// Authorization header configuration to authenticate against the
		// target HTTP endpoint.
		// Cannot be set at the same time as `oAuth2`, or `basicAuth`.
		authorization?: {
			// Selects a key of a Secret in the namespace that contains the
			// credentials for authentication.
			credentials?: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}

			// Defines the authentication type. The value is case-insensitive.
			//
			// "Basic" is not a supported value.
			//
			// Default: "Bearer"
			type?: string
		}

		// BasicAuth information to authenticate against the target HTTP
		// endpoint.
		// More info:
		// https://prometheus.io/docs/operating/configuration/#endpoints
		// Cannot be set at the same time as `authorization`, or `oAuth2`.
		basicAuth?: {
			// `password` specifies a key of a Secret containing the password
			// for
			// authentication.
			password?: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}

			// `username` specifies a key of a Secret containing the username
			// for
			// authentication.
			username?: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}
		}

		// Optional client ID. Only required with the OAuth authentication
		// method.
		clientID?: strings.MinRunes(1)

		// Optional client secret. Only required with the OAuth
		// authentication method.
		clientSecret?: {
			// The key of the secret to select from. Must be a valid secret
			// key.
			key!: string

			// Name of the referent.
			// This field is effectively required, but due to backwards
			// compatibility is
			// allowed to be empty. Instances of this type with an empty value
			// here are
			// almost certainly wrong.
			// More info:
			// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
			name?: string

			// Specify whether the Secret or its key must be defined
			optional?: bool
		}

		// Whether to enable HTTP2.
		enableHTTP2?: bool

		// The Azure environment.
		environment?: strings.MinRunes(1)

		// Configure whether HTTP requests follow HTTP 3xx redirects.
		followRedirects?: bool

		// `noProxy` is a comma-separated string that can contain IPs,
		// CIDR notation, domain names
		// that should be excluded from proxying. IP and domain names can
		// contain port numbers.
		//
		// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
		// Thanos >= v0.32.0.
		noProxy?: string

		// Optional OAuth 2.0 configuration to authenticate against the
		// target HTTP endpoint.
		// Cannot be set at the same time as `authorization`, or
		// `basicAuth`.
		oauth2?: {
			// `clientId` specifies a key of a Secret or ConfigMap containing
			// the
			// OAuth2 client's ID.
			clientId!: {
				// ConfigMap containing data to use for the targets.
				configMap?: {
					// The key to select.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the ConfigMap or its key must be defined
					optional?: bool
				}

				// Secret containing data to use for the targets.
				secret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}
			}

			// `clientSecret` specifies a key of a Secret containing the
			// OAuth2
			// client's secret.
			clientSecret!: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}

			// `endpointParams` configures the HTTP parameters to append to
			// the token
			// URL.
			endpointParams?: {
				[string]: string
			}

			// `noProxy` is a comma-separated string that can contain IPs,
			// CIDR notation, domain names
			// that should be excluded from proxying. IP and domain names can
			// contain port numbers.
			//
			// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
			// Thanos >= v0.32.0.
			noProxy?: string

			// ProxyConnectHeader optionally specifies headers to send to
			// proxies during CONNECT requests.
			//
			// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
			// Thanos >= v0.32.0.
			proxyConnectHeader?: {
				[string]: [...{
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}]
			}

			// Whether to use the proxy configuration defined by environment
			// variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).
			//
			// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
			// Thanos >= v0.32.0.
			proxyFromEnvironment?: bool

			// `proxyURL` defines the HTTP proxy server to use.
			proxyUrl?: =~"^(http|https|socks5)://.+$"

			// `scopes` defines the OAuth2 scopes used for the token request.
			scopes?: [...string]

			// TLS configuration to use when connecting to the OAuth2 server.
			// It requires Prometheus >= v2.43.0.
			tlsConfig?: {
				// Certificate authority used when verifying server certificates.
				ca?: {
					// ConfigMap containing data to use for the targets.
					configMap?: {
						// The key to select.
						key!: string

						// Name of the referent.
						// This field is effectively required, but due to backwards
						// compatibility is
						// allowed to be empty. Instances of this type with an empty value
						// here are
						// almost certainly wrong.
						// More info:
						// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
						name?: string

						// Specify whether the ConfigMap or its key must be defined
						optional?: bool
					}

					// Secret containing data to use for the targets.
					secret?: {
						// The key of the secret to select from. Must be a valid secret
						// key.
						key!: string

						// Name of the referent.
						// This field is effectively required, but due to backwards
						// compatibility is
						// allowed to be empty. Instances of this type with an empty value
						// here are
						// almost certainly wrong.
						// More info:
						// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
						name?: string

						// Specify whether the Secret or its key must be defined
						optional?: bool
					}
				}

				// Client certificate to present when doing client-authentication.
				cert?: {
					// ConfigMap containing data to use for the targets.
					configMap?: {
						// The key to select.
						key!: string

						// Name of the referent.
						// This field is effectively required, but due to backwards
						// compatibility is
						// allowed to be empty. Instances of this type with an empty value
						// here are
						// almost certainly wrong.
						// More info:
						// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
						name?: string

						// Specify whether the ConfigMap or its key must be defined
						optional?: bool
					}

					// Secret containing data to use for the targets.
					secret?: {
						// The key of the secret to select from. Must be a valid secret
						// key.
						key!: string

						// Name of the referent.
						// This field is effectively required, but due to backwards
						// compatibility is
						// allowed to be empty. Instances of this type with an empty value
						// here are
						// almost certainly wrong.
						// More info:
						// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
						name?: string

						// Specify whether the Secret or its key must be defined
						optional?: bool
					}
				}

				// Disable target certificate validation.
				insecureSkipVerify?: bool

				// Secret containing the client key file for the targets.
				keySecret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}

				// Maximum acceptable TLS version.
				//
				// It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
				maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"

				// Minimum acceptable TLS version.
				//
				// It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
				minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"

				// Used to verify the hostname for the targets.
				serverName?: string
			}

			// `tokenURL` configures the URL to fetch the token from.
			tokenUrl!: strings.MinRunes(1)
		}

		// The port to scrape metrics from. If using the public IP
		// address, this must
		// instead be specified in the relabeling rule.
		port?: uint16

		// ProxyConnectHeader optionally specifies headers to send to
		// proxies during CONNECT requests.
		//
		// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
		// Thanos >= v0.32.0.
		proxyConnectHeader?: {
			[string]: [...{
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}]
		}

		// Whether to use the proxy configuration defined by environment
		// variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).
		//
		// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
		// Thanos >= v0.32.0.
		proxyFromEnvironment?: bool

		// `proxyURL` defines the HTTP proxy server to use.
		proxyUrl?: =~"^(http|https|socks5)://.+$"

		// RefreshInterval configures the refresh interval at which
		// Prometheus will re-read the instance list.
		refreshInterval?: =~"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$"

		// Optional resource group name. Limits discovery to this resource
		// group.
		// Requires Prometheus v2.35.0 and above
		resourceGroup?: strings.MinRunes(1)

		// The subscription ID. Always required.
		subscriptionID!: strings.MinRunes(1)

		// Optional tenant ID. Only required with the OAuth authentication
		// method.
		tenantID?: strings.MinRunes(1)

		// TLS configuration applying to the target HTTP endpoint.
		tlsConfig?: {
			// Certificate authority used when verifying server certificates.
			ca?: {
				// ConfigMap containing data to use for the targets.
				configMap?: {
					// The key to select.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the ConfigMap or its key must be defined
					optional?: bool
				}

				// Secret containing data to use for the targets.
				secret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}
			}

			// Client certificate to present when doing client-authentication.
			cert?: {
				// ConfigMap containing data to use for the targets.
				configMap?: {
					// The key to select.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the ConfigMap or its key must be defined
					optional?: bool
				}

				// Secret containing data to use for the targets.
				secret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}
			}

			// Disable target certificate validation.
			insecureSkipVerify?: bool

			// Secret containing the client key file for the targets.
			keySecret?: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}

			// Maximum acceptable TLS version.
			//
			// It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
			maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"

			// Minimum acceptable TLS version.
			//
			// It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
			minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"

			// Used to verify the hostname for the targets.
			serverName?: string
		}
	}]

	// BasicAuth information to use on every scrape request.
	basicAuth?: {
		// `password` specifies a key of a Secret containing the password
		// for
		// authentication.
		password?: {
			// The key of the secret to select from. Must be a valid secret
			// key.
			key!: string

			// Name of the referent.
			// This field is effectively required, but due to backwards
			// compatibility is
			// allowed to be empty. Instances of this type with an empty value
			// here are
			// almost certainly wrong.
			// More info:
			// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
			name?: string

			// Specify whether the Secret or its key must be defined
			optional?: bool
		}

		// `username` specifies a key of a Secret containing the username
		// for
		// authentication.
		username?: {
			// The key of the secret to select from. Must be a valid secret
			// key.
			key!: string

			// Name of the referent.
			// This field is effectively required, but due to backwards
			// compatibility is
			// allowed to be empty. Instances of this type with an empty value
			// here are
			// almost certainly wrong.
			// More info:
			// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
			name?: string

			// Specify whether the Secret or its key must be defined
			optional?: bool
		}
	}

	// ConsulSDConfigs defines a list of Consul service discovery
	// configurations.
	consulSDConfigs?: [...{
		// Allow stale Consul results (see
		// https://www.consul.io/api/features/consistency.html). Will
		// reduce load on Consul.
		// If unset, Prometheus uses its default value.
		allowStale?: bool

		// Optional Authorization header configuration to authenticate
		// against the Consul Server.
		// Cannot be set at the same time as `basicAuth`, or `oauth2`.
		authorization?: {
			// Selects a key of a Secret in the namespace that contains the
			// credentials for authentication.
			credentials?: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}

			// Defines the authentication type. The value is case-insensitive.
			//
			// "Basic" is not a supported value.
			//
			// Default: "Bearer"
			type?: string
		}

		// Optional BasicAuth information to authenticate against the
		// Consul Server.
		// More info:
		// https://prometheus.io/docs/operating/configuration/#endpoints
		// Cannot be set at the same time as `authorization`, or `oauth2`.
		basicAuth?: {
			// `password` specifies a key of a Secret containing the password
			// for
			// authentication.
			password?: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}

			// `username` specifies a key of a Secret containing the username
			// for
			// authentication.
			username?: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}
		}

		// Consul Datacenter name, if not provided it will use the local
		// Consul Agent Datacenter.
		datacenter?: strings.MinRunes(1)

		// Whether to enable HTTP2.
		// If unset, Prometheus uses its default value.
		enableHTTP2?: bool

		// Filter expression used to filter the catalog results.
		// See https://www.consul.io/api-docs/catalog#list-services
		// It requires Prometheus >= 3.0.0.
		filter?: strings.MinRunes(1)

		// Configure whether HTTP requests follow HTTP 3xx redirects.
		// If unset, Prometheus uses its default value.
		followRedirects?: bool

		// Namespaces are only supported in Consul Enterprise.
		//
		// It requires Prometheus >= 2.28.0.
		namespace?: strings.MinRunes(1)

		// `noProxy` is a comma-separated string that can contain IPs,
		// CIDR notation, domain names
		// that should be excluded from proxying. IP and domain names can
		// contain port numbers.
		//
		// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
		// Thanos >= v0.32.0.
		noProxy?: string

		// Node metadata key/value pairs to filter nodes for a given
		// service.
		// Starting with Consul 1.14, it is recommended to use `filter`
		// with the `NodeMeta` selector instead.
		nodeMeta?: {
			[string]: string
		}

		// Optional OAuth2.0 configuration.
		// Cannot be set at the same time as `basicAuth`, or
		// `authorization`.
		oauth2?: {
			// `clientId` specifies a key of a Secret or ConfigMap containing
			// the
			// OAuth2 client's ID.
			clientId!: {
				// ConfigMap containing data to use for the targets.
				configMap?: {
					// The key to select.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the ConfigMap or its key must be defined
					optional?: bool
				}

				// Secret containing data to use for the targets.
				secret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}
			}

			// `clientSecret` specifies a key of a Secret containing the
			// OAuth2
			// client's secret.
			clientSecret!: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}

			// `endpointParams` configures the HTTP parameters to append to
			// the token
			// URL.
			endpointParams?: {
				[string]: string
			}

			// `noProxy` is a comma-separated string that can contain IPs,
			// CIDR notation, domain names
			// that should be excluded from proxying. IP and domain names can
			// contain port numbers.
			//
			// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
			// Thanos >= v0.32.0.
			noProxy?: string

			// ProxyConnectHeader optionally specifies headers to send to
			// proxies during CONNECT requests.
			//
			// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
			// Thanos >= v0.32.0.
			proxyConnectHeader?: {
				[string]: [...{
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}]
			}

			// Whether to use the proxy configuration defined by environment
			// variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).
			//
			// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
			// Thanos >= v0.32.0.
			proxyFromEnvironment?: bool

			// `proxyURL` defines the HTTP proxy server to use.
			proxyUrl?: =~"^(http|https|socks5)://.+$"

			// `scopes` defines the OAuth2 scopes used for the token request.
			scopes?: [...string]

			// TLS configuration to use when connecting to the OAuth2 server.
			// It requires Prometheus >= v2.43.0.
			tlsConfig?: {
				// Certificate authority used when verifying server certificates.
				ca?: {
					// ConfigMap containing data to use for the targets.
					configMap?: {
						// The key to select.
						key!: string

						// Name of the referent.
						// This field is effectively required, but due to backwards
						// compatibility is
						// allowed to be empty. Instances of this type with an empty value
						// here are
						// almost certainly wrong.
						// More info:
						// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
						name?: string

						// Specify whether the ConfigMap or its key must be defined
						optional?: bool
					}

					// Secret containing data to use for the targets.
					secret?: {
						// The key of the secret to select from. Must be a valid secret
						// key.
						key!: string

						// Name of the referent.
						// This field is effectively required, but due to backwards
						// compatibility is
						// allowed to be empty. Instances of this type with an empty value
						// here are
						// almost certainly wrong.
						// More info:
						// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
						name?: string

						// Specify whether the Secret or its key must be defined
						optional?: bool
					}
				}

				// Client certificate to present when doing client-authentication.
				cert?: {
					// ConfigMap containing data to use for the targets.
					configMap?: {
						// The key to select.
						key!: string

						// Name of the referent.
						// This field is effectively required, but due to backwards
						// compatibility is
						// allowed to be empty. Instances of this type with an empty value
						// here are
						// almost certainly wrong.
						// More info:
						// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
						name?: string

						// Specify whether the ConfigMap or its key must be defined
						optional?: bool
					}

					// Secret containing data to use for the targets.
					secret?: {
						// The key of the secret to select from. Must be a valid secret
						// key.
						key!: string

						// Name of the referent.
						// This field is effectively required, but due to backwards
						// compatibility is
						// allowed to be empty. Instances of this type with an empty value
						// here are
						// almost certainly wrong.
						// More info:
						// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
						name?: string

						// Specify whether the Secret or its key must be defined
						optional?: bool
					}
				}

				// Disable target certificate validation.
				insecureSkipVerify?: bool

				// Secret containing the client key file for the targets.
				keySecret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}

				// Maximum acceptable TLS version.
				//
				// It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
				maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"

				// Minimum acceptable TLS version.
				//
				// It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
				minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"

				// Used to verify the hostname for the targets.
				serverName?: string
			}

			// `tokenURL` configures the URL to fetch the token from.
			tokenUrl!: strings.MinRunes(1)
		}

		// Admin Partitions are only supported in Consul Enterprise.
		partition?: strings.MinRunes(1)

		// Prefix for URIs for when consul is behind an API gateway
		// (reverse proxy).
		//
		// It requires Prometheus >= 2.45.0.
		pathPrefix?: strings.MinRunes(1)

		// ProxyConnectHeader optionally specifies headers to send to
		// proxies during CONNECT requests.
		//
		// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
		// Thanos >= v0.32.0.
		proxyConnectHeader?: {
			[string]: [...{
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}]
		}

		// Whether to use the proxy configuration defined by environment
		// variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).
		//
		// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
		// Thanos >= v0.32.0.
		proxyFromEnvironment?: bool

		// `proxyURL` defines the HTTP proxy server to use.
		proxyUrl?: =~"^(http|https|socks5)://.+$"

		// The time after which the provided names are refreshed.
		// On large setup it might be a good idea to increase this value
		// because the catalog will change all the time.
		// If unset, Prometheus uses its default value.
		refreshInterval?: =~"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$"

		// HTTP Scheme default "http"
		scheme?: "HTTP" | "HTTPS"

		// Consul server address. A valid string consisting of a hostname
		// or IP followed by an optional port number.
		server!: strings.MinRunes(1)

		// A list of services for which targets are retrieved. If omitted,
		// all services are scraped.
		services?: [...string]

		// The string by which Consul tags are joined into the tag label.
		// If unset, Prometheus uses its default value.
		tagSeparator?: strings.MinRunes(1)

		// An optional list of tags used to filter nodes for a given
		// service. Services must contain all tags in the list.
		// Starting with Consul 1.14, it is recommended to use `filter`
		// with the `ServiceTags` selector instead.
		tags?: [...string]

		// TLS configuration to connect to the Consul API.
		tlsConfig?: {
			// Certificate authority used when verifying server certificates.
			ca?: {
				// ConfigMap containing data to use for the targets.
				configMap?: {
					// The key to select.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the ConfigMap or its key must be defined
					optional?: bool
				}

				// Secret containing data to use for the targets.
				secret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}
			}

			// Client certificate to present when doing client-authentication.
			cert?: {
				// ConfigMap containing data to use for the targets.
				configMap?: {
					// The key to select.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the ConfigMap or its key must be defined
					optional?: bool
				}

				// Secret containing data to use for the targets.
				secret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}
			}

			// Disable target certificate validation.
			insecureSkipVerify?: bool

			// Secret containing the client key file for the targets.
			keySecret?: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}

			// Maximum acceptable TLS version.
			//
			// It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
			maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"

			// Minimum acceptable TLS version.
			//
			// It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
			minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"

			// Used to verify the hostname for the targets.
			serverName?: string
		}

		// Consul ACL TokenRef, if not provided it will use the ACL from
		// the local Consul Agent.
		tokenRef?: {
			// The key of the secret to select from. Must be a valid secret
			// key.
			key!: string

			// Name of the referent.
			// This field is effectively required, but due to backwards
			// compatibility is
			// allowed to be empty. Instances of this type with an empty value
			// here are
			// almost certainly wrong.
			// More info:
			// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
			name?: string

			// Specify whether the Secret or its key must be defined
			optional?: bool
		}
	}]

	// Whether to convert all scraped classic histograms into a native
	// histogram with custom buckets.
	// It requires Prometheus >= v3.0.0.
	convertClassicHistogramsToNHCB?: bool

	// DigitalOceanSDConfigs defines a list of DigitalOcean service
	// discovery configurations.
	digitalOceanSDConfigs?: [...{
		// Authorization header configuration to authenticate against the
		// DigitalOcean API.
		// Cannot be set at the same time as `oauth2`.
		authorization?: {
			// Selects a key of a Secret in the namespace that contains the
			// credentials for authentication.
			credentials?: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}

			// Defines the authentication type. The value is case-insensitive.
			//
			// "Basic" is not a supported value.
			//
			// Default: "Bearer"
			type?: string
		}

		// Whether to enable HTTP2.
		enableHTTP2?: bool

		// Configure whether HTTP requests follow HTTP 3xx redirects.
		followRedirects?: bool

		// `noProxy` is a comma-separated string that can contain IPs,
		// CIDR notation, domain names
		// that should be excluded from proxying. IP and domain names can
		// contain port numbers.
		//
		// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
		// Thanos >= v0.32.0.
		noProxy?: string

		// Optional OAuth 2.0 configuration.
		// Cannot be set at the same time as `authorization`.
		oauth2?: {
			// `clientId` specifies a key of a Secret or ConfigMap containing
			// the
			// OAuth2 client's ID.
			clientId!: {
				// ConfigMap containing data to use for the targets.
				configMap?: {
					// The key to select.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the ConfigMap or its key must be defined
					optional?: bool
				}

				// Secret containing data to use for the targets.
				secret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}
			}

			// `clientSecret` specifies a key of a Secret containing the
			// OAuth2
			// client's secret.
			clientSecret!: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}

			// `endpointParams` configures the HTTP parameters to append to
			// the token
			// URL.
			endpointParams?: {
				[string]: string
			}

			// `noProxy` is a comma-separated string that can contain IPs,
			// CIDR notation, domain names
			// that should be excluded from proxying. IP and domain names can
			// contain port numbers.
			//
			// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
			// Thanos >= v0.32.0.
			noProxy?: string

			// ProxyConnectHeader optionally specifies headers to send to
			// proxies during CONNECT requests.
			//
			// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
			// Thanos >= v0.32.0.
			proxyConnectHeader?: {
				[string]: [...{
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}]
			}

			// Whether to use the proxy configuration defined by environment
			// variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).
			//
			// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
			// Thanos >= v0.32.0.
			proxyFromEnvironment?: bool

			// `proxyURL` defines the HTTP proxy server to use.
			proxyUrl?: =~"^(http|https|socks5)://.+$"

			// `scopes` defines the OAuth2 scopes used for the token request.
			scopes?: [...string]

			// TLS configuration to use when connecting to the OAuth2 server.
			// It requires Prometheus >= v2.43.0.
			tlsConfig?: {
				// Certificate authority used when verifying server certificates.
				ca?: {
					// ConfigMap containing data to use for the targets.
					configMap?: {
						// The key to select.
						key!: string

						// Name of the referent.
						// This field is effectively required, but due to backwards
						// compatibility is
						// allowed to be empty. Instances of this type with an empty value
						// here are
						// almost certainly wrong.
						// More info:
						// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
						name?: string

						// Specify whether the ConfigMap or its key must be defined
						optional?: bool
					}

					// Secret containing data to use for the targets.
					secret?: {
						// The key of the secret to select from. Must be a valid secret
						// key.
						key!: string

						// Name of the referent.
						// This field is effectively required, but due to backwards
						// compatibility is
						// allowed to be empty. Instances of this type with an empty value
						// here are
						// almost certainly wrong.
						// More info:
						// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
						name?: string

						// Specify whether the Secret or its key must be defined
						optional?: bool
					}
				}

				// Client certificate to present when doing client-authentication.
				cert?: {
					// ConfigMap containing data to use for the targets.
					configMap?: {
						// The key to select.
						key!: string

						// Name of the referent.
						// This field is effectively required, but due to backwards
						// compatibility is
						// allowed to be empty. Instances of this type with an empty value
						// here are
						// almost certainly wrong.
						// More info:
						// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
						name?: string

						// Specify whether the ConfigMap or its key must be defined
						optional?: bool
					}

					// Secret containing data to use for the targets.
					secret?: {
						// The key of the secret to select from. Must be a valid secret
						// key.
						key!: string

						// Name of the referent.
						// This field is effectively required, but due to backwards
						// compatibility is
						// allowed to be empty. Instances of this type with an empty value
						// here are
						// almost certainly wrong.
						// More info:
						// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
						name?: string

						// Specify whether the Secret or its key must be defined
						optional?: bool
					}
				}

				// Disable target certificate validation.
				insecureSkipVerify?: bool

				// Secret containing the client key file for the targets.
				keySecret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}

				// Maximum acceptable TLS version.
				//
				// It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
				maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"

				// Minimum acceptable TLS version.
				//
				// It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
				minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"

				// Used to verify the hostname for the targets.
				serverName?: string
			}

			// `tokenURL` configures the URL to fetch the token from.
			tokenUrl!: strings.MinRunes(1)
		}

		// The port to scrape metrics from.
		port?: uint16

		// ProxyConnectHeader optionally specifies headers to send to
		// proxies during CONNECT requests.
		//
		// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
		// Thanos >= v0.32.0.
		proxyConnectHeader?: {
			[string]: [...{
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}]
		}

		// Whether to use the proxy configuration defined by environment
		// variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).
		//
		// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
		// Thanos >= v0.32.0.
		proxyFromEnvironment?: bool

		// `proxyURL` defines the HTTP proxy server to use.
		proxyUrl?: =~"^(http|https|socks5)://.+$"

		// Refresh interval to re-read the instance list.
		refreshInterval?: =~"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$"

		// TLS configuration applying to the target HTTP endpoint.
		tlsConfig?: {
			// Certificate authority used when verifying server certificates.
			ca?: {
				// ConfigMap containing data to use for the targets.
				configMap?: {
					// The key to select.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the ConfigMap or its key must be defined
					optional?: bool
				}

				// Secret containing data to use for the targets.
				secret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}
			}

			// Client certificate to present when doing client-authentication.
			cert?: {
				// ConfigMap containing data to use for the targets.
				configMap?: {
					// The key to select.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the ConfigMap or its key must be defined
					optional?: bool
				}

				// Secret containing data to use for the targets.
				secret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}
			}

			// Disable target certificate validation.
			insecureSkipVerify?: bool

			// Secret containing the client key file for the targets.
			keySecret?: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}

			// Maximum acceptable TLS version.
			//
			// It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
			maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"

			// Minimum acceptable TLS version.
			//
			// It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
			minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"

			// Used to verify the hostname for the targets.
			serverName?: string
		}
	}]

	// DNSSDConfigs defines a list of DNS service discovery
	// configurations.
	dnsSDConfigs?: [...{
		// A list of DNS domain names to be queried.
		names!: [...strings.MinRunes(1)] & [_, ...]

		// The port number used if the query type is not SRV
		// Ignored for SRV records
		port?: uint16

		// RefreshInterval configures the time after which the provided
		// names are refreshed.
		// If not set, Prometheus uses its default value.
		refreshInterval?: =~"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$"

		// The type of DNS query to perform. One of SRV, A, AAAA, MX or
		// NS.
		// If not set, Prometheus uses its default value.
		//
		// When set to NS, it requires Prometheus >= v2.49.0.
		// When set to MX, it requires Prometheus >= v2.38.0
		type?: "A" | "AAAA" | "MX" | "NS" | "SRV"
	}]

	// DockerSDConfigs defines a list of Docker service discovery
	// configurations.
	dockerSDConfigs?: [...{
		// Authorization header configuration to authenticate against the
		// Docker API.
		// Cannot be set at the same time as `oauth2`.
		authorization?: {
			// Selects a key of a Secret in the namespace that contains the
			// credentials for authentication.
			credentials?: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}

			// Defines the authentication type. The value is case-insensitive.
			//
			// "Basic" is not a supported value.
			//
			// Default: "Bearer"
			type?: string
		}

		// BasicAuth information to use on every scrape request.
		basicAuth?: {
			// `password` specifies a key of a Secret containing the password
			// for
			// authentication.
			password?: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}

			// `username` specifies a key of a Secret containing the username
			// for
			// authentication.
			username?: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}
		}

		// Whether to enable HTTP2.
		enableHTTP2?: bool

		// Optional filters to limit the discovery process to a subset of
		// the available resources.
		filters?: [...{
			// Name of the Filter.
			name!: string

			// Value to filter on.
			values!: [...strings.MinRunes(1)] & [_, ...]
		}]

		// Configure whether HTTP requests follow HTTP 3xx redirects.
		followRedirects?: bool

		// Address of the docker daemon
		host!: strings.MinRunes(1)

		// The host to use if the container is in host networking mode.
		hostNetworkingHost?: strings.MinRunes(1)

		// Configure whether to match the first network if the container
		// has multiple networks defined.
		// If unset, Prometheus uses true by default.
		// It requires Prometheus >= v2.54.1.
		matchFirstNetwork?: bool

		// `noProxy` is a comma-separated string that can contain IPs,
		// CIDR notation, domain names
		// that should be excluded from proxying. IP and domain names can
		// contain port numbers.
		//
		// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
		// Thanos >= v0.32.0.
		noProxy?: string

		// Optional OAuth 2.0 configuration.
		// Cannot be set at the same time as `authorization`.
		oauth2?: {
			// `clientId` specifies a key of a Secret or ConfigMap containing
			// the
			// OAuth2 client's ID.
			clientId!: {
				// ConfigMap containing data to use for the targets.
				configMap?: {
					// The key to select.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the ConfigMap or its key must be defined
					optional?: bool
				}

				// Secret containing data to use for the targets.
				secret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}
			}

			// `clientSecret` specifies a key of a Secret containing the
			// OAuth2
			// client's secret.
			clientSecret!: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}

			// `endpointParams` configures the HTTP parameters to append to
			// the token
			// URL.
			endpointParams?: {
				[string]: string
			}

			// `noProxy` is a comma-separated string that can contain IPs,
			// CIDR notation, domain names
			// that should be excluded from proxying. IP and domain names can
			// contain port numbers.
			//
			// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
			// Thanos >= v0.32.0.
			noProxy?: string

			// ProxyConnectHeader optionally specifies headers to send to
			// proxies during CONNECT requests.
			//
			// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
			// Thanos >= v0.32.0.
			proxyConnectHeader?: {
				[string]: [...{
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}]
			}

			// Whether to use the proxy configuration defined by environment
			// variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).
			//
			// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
			// Thanos >= v0.32.0.
			proxyFromEnvironment?: bool

			// `proxyURL` defines the HTTP proxy server to use.
			proxyUrl?: =~"^(http|https|socks5)://.+$"

			// `scopes` defines the OAuth2 scopes used for the token request.
			scopes?: [...string]

			// TLS configuration to use when connecting to the OAuth2 server.
			// It requires Prometheus >= v2.43.0.
			tlsConfig?: {
				// Certificate authority used when verifying server certificates.
				ca?: {
					// ConfigMap containing data to use for the targets.
					configMap?: {
						// The key to select.
						key!: string

						// Name of the referent.
						// This field is effectively required, but due to backwards
						// compatibility is
						// allowed to be empty. Instances of this type with an empty value
						// here are
						// almost certainly wrong.
						// More info:
						// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
						name?: string

						// Specify whether the ConfigMap or its key must be defined
						optional?: bool
					}

					// Secret containing data to use for the targets.
					secret?: {
						// The key of the secret to select from. Must be a valid secret
						// key.
						key!: string

						// Name of the referent.
						// This field is effectively required, but due to backwards
						// compatibility is
						// allowed to be empty. Instances of this type with an empty value
						// here are
						// almost certainly wrong.
						// More info:
						// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
						name?: string

						// Specify whether the Secret or its key must be defined
						optional?: bool
					}
				}

				// Client certificate to present when doing client-authentication.
				cert?: {
					// ConfigMap containing data to use for the targets.
					configMap?: {
						// The key to select.
						key!: string

						// Name of the referent.
						// This field is effectively required, but due to backwards
						// compatibility is
						// allowed to be empty. Instances of this type with an empty value
						// here are
						// almost certainly wrong.
						// More info:
						// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
						name?: string

						// Specify whether the ConfigMap or its key must be defined
						optional?: bool
					}

					// Secret containing data to use for the targets.
					secret?: {
						// The key of the secret to select from. Must be a valid secret
						// key.
						key!: string

						// Name of the referent.
						// This field is effectively required, but due to backwards
						// compatibility is
						// allowed to be empty. Instances of this type with an empty value
						// here are
						// almost certainly wrong.
						// More info:
						// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
						name?: string

						// Specify whether the Secret or its key must be defined
						optional?: bool
					}
				}

				// Disable target certificate validation.
				insecureSkipVerify?: bool

				// Secret containing the client key file for the targets.
				keySecret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}

				// Maximum acceptable TLS version.
				//
				// It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
				maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"

				// Minimum acceptable TLS version.
				//
				// It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
				minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"

				// Used to verify the hostname for the targets.
				serverName?: string
			}

			// `tokenURL` configures the URL to fetch the token from.
			tokenUrl!: strings.MinRunes(1)
		}

		// The port to scrape metrics from.
		port?: uint16

		// ProxyConnectHeader optionally specifies headers to send to
		// proxies during CONNECT requests.
		//
		// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
		// Thanos >= v0.32.0.
		proxyConnectHeader?: {
			[string]: [...{
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}]
		}

		// Whether to use the proxy configuration defined by environment
		// variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).
		//
		// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
		// Thanos >= v0.32.0.
		proxyFromEnvironment?: bool

		// `proxyURL` defines the HTTP proxy server to use.
		proxyUrl?: =~"^(http|https|socks5)://.+$"

		// Time after which the container is refreshed.
		refreshInterval?: =~"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$"

		// TLS configuration applying to the target HTTP endpoint.
		tlsConfig?: {
			// Certificate authority used when verifying server certificates.
			ca?: {
				// ConfigMap containing data to use for the targets.
				configMap?: {
					// The key to select.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the ConfigMap or its key must be defined
					optional?: bool
				}

				// Secret containing data to use for the targets.
				secret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}
			}

			// Client certificate to present when doing client-authentication.
			cert?: {
				// ConfigMap containing data to use for the targets.
				configMap?: {
					// The key to select.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the ConfigMap or its key must be defined
					optional?: bool
				}

				// Secret containing data to use for the targets.
				secret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}
			}

			// Disable target certificate validation.
			insecureSkipVerify?: bool

			// Secret containing the client key file for the targets.
			keySecret?: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}

			// Maximum acceptable TLS version.
			//
			// It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
			maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"

			// Minimum acceptable TLS version.
			//
			// It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
			minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"

			// Used to verify the hostname for the targets.
			serverName?: string
		}
	}]

	// DockerswarmSDConfigs defines a list of Dockerswarm service
	// discovery configurations.
	dockerSwarmSDConfigs?: [...{
		// Authorization header configuration to authenticate against the
		// target HTTP endpoint.
		authorization?: {
			// Selects a key of a Secret in the namespace that contains the
			// credentials for authentication.
			credentials?: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}

			// Defines the authentication type. The value is case-insensitive.
			//
			// "Basic" is not a supported value.
			//
			// Default: "Bearer"
			type?: string
		}

		// Optional HTTP basic authentication information.
		basicAuth?: {
			// `password` specifies a key of a Secret containing the password
			// for
			// authentication.
			password?: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}

			// `username` specifies a key of a Secret containing the username
			// for
			// authentication.
			username?: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}
		}

		// Whether to enable HTTP2.
		enableHTTP2?: bool

		// Optional filters to limit the discovery process to a subset of
		// available
		// resources.
		// The available filters are listed in the upstream documentation:
		// Services:
		// https://docs.docker.com/engine/api/v1.40/#operation/ServiceList
		// Tasks:
		// https://docs.docker.com/engine/api/v1.40/#operation/TaskList
		// Nodes:
		// https://docs.docker.com/engine/api/v1.40/#operation/NodeList
		filters?: [...{
			// Name of the Filter.
			name!: string

			// Value to filter on.
			values!: [...strings.MinRunes(1)] & [_, ...]
		}]

		// Configure whether HTTP requests follow HTTP 3xx redirects.
		followRedirects?: bool

		// Address of the Docker daemon
		host!: =~"^[a-zA-Z][a-zA-Z0-9+.-]*://.+$"

		// `noProxy` is a comma-separated string that can contain IPs,
		// CIDR notation, domain names
		// that should be excluded from proxying. IP and domain names can
		// contain port numbers.
		//
		// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
		// Thanos >= v0.32.0.
		noProxy?: string

		// Optional OAuth 2.0 configuration.
		// Cannot be set at the same time as `authorization`, or
		// `basicAuth`.
		oauth2?: {
			// `clientId` specifies a key of a Secret or ConfigMap containing
			// the
			// OAuth2 client's ID.
			clientId!: {
				// ConfigMap containing data to use for the targets.
				configMap?: {
					// The key to select.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the ConfigMap or its key must be defined
					optional?: bool
				}

				// Secret containing data to use for the targets.
				secret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}
			}

			// `clientSecret` specifies a key of a Secret containing the
			// OAuth2
			// client's secret.
			clientSecret!: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}

			// `endpointParams` configures the HTTP parameters to append to
			// the token
			// URL.
			endpointParams?: {
				[string]: string
			}

			// `noProxy` is a comma-separated string that can contain IPs,
			// CIDR notation, domain names
			// that should be excluded from proxying. IP and domain names can
			// contain port numbers.
			//
			// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
			// Thanos >= v0.32.0.
			noProxy?: string

			// ProxyConnectHeader optionally specifies headers to send to
			// proxies during CONNECT requests.
			//
			// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
			// Thanos >= v0.32.0.
			proxyConnectHeader?: {
				[string]: [...{
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}]
			}

			// Whether to use the proxy configuration defined by environment
			// variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).
			//
			// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
			// Thanos >= v0.32.0.
			proxyFromEnvironment?: bool

			// `proxyURL` defines the HTTP proxy server to use.
			proxyUrl?: =~"^(http|https|socks5)://.+$"

			// `scopes` defines the OAuth2 scopes used for the token request.
			scopes?: [...string]

			// TLS configuration to use when connecting to the OAuth2 server.
			// It requires Prometheus >= v2.43.0.
			tlsConfig?: {
				// Certificate authority used when verifying server certificates.
				ca?: {
					// ConfigMap containing data to use for the targets.
					configMap?: {
						// The key to select.
						key!: string

						// Name of the referent.
						// This field is effectively required, but due to backwards
						// compatibility is
						// allowed to be empty. Instances of this type with an empty value
						// here are
						// almost certainly wrong.
						// More info:
						// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
						name?: string

						// Specify whether the ConfigMap or its key must be defined
						optional?: bool
					}

					// Secret containing data to use for the targets.
					secret?: {
						// The key of the secret to select from. Must be a valid secret
						// key.
						key!: string

						// Name of the referent.
						// This field is effectively required, but due to backwards
						// compatibility is
						// allowed to be empty. Instances of this type with an empty value
						// here are
						// almost certainly wrong.
						// More info:
						// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
						name?: string

						// Specify whether the Secret or its key must be defined
						optional?: bool
					}
				}

				// Client certificate to present when doing client-authentication.
				cert?: {
					// ConfigMap containing data to use for the targets.
					configMap?: {
						// The key to select.
						key!: string

						// Name of the referent.
						// This field is effectively required, but due to backwards
						// compatibility is
						// allowed to be empty. Instances of this type with an empty value
						// here are
						// almost certainly wrong.
						// More info:
						// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
						name?: string

						// Specify whether the ConfigMap or its key must be defined
						optional?: bool
					}

					// Secret containing data to use for the targets.
					secret?: {
						// The key of the secret to select from. Must be a valid secret
						// key.
						key!: string

						// Name of the referent.
						// This field is effectively required, but due to backwards
						// compatibility is
						// allowed to be empty. Instances of this type with an empty value
						// here are
						// almost certainly wrong.
						// More info:
						// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
						name?: string

						// Specify whether the Secret or its key must be defined
						optional?: bool
					}
				}

				// Disable target certificate validation.
				insecureSkipVerify?: bool

				// Secret containing the client key file for the targets.
				keySecret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}

				// Maximum acceptable TLS version.
				//
				// It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
				maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"

				// Minimum acceptable TLS version.
				//
				// It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
				minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"

				// Used to verify the hostname for the targets.
				serverName?: string
			}

			// `tokenURL` configures the URL to fetch the token from.
			tokenUrl!: strings.MinRunes(1)
		}

		// The port to scrape metrics from, when `role` is nodes, and for
		// discovered
		// tasks and services that don't have published ports.
		port?: uint16

		// ProxyConnectHeader optionally specifies headers to send to
		// proxies during CONNECT requests.
		//
		// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
		// Thanos >= v0.32.0.
		proxyConnectHeader?: {
			[string]: [...{
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}]
		}

		// Whether to use the proxy configuration defined by environment
		// variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).
		//
		// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
		// Thanos >= v0.32.0.
		proxyFromEnvironment?: bool

		// `proxyURL` defines the HTTP proxy server to use.
		proxyUrl?: =~"^(http|https|socks5)://.+$"

		// The time after which the service discovery data is refreshed.
		refreshInterval?: =~"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$"

		// Role of the targets to retrieve. Must be `Services`, `Tasks`,
		// or `Nodes`.
		role!: "Services" | "Tasks" | "Nodes"

		// TLS configuration to use on every scrape request
		tlsConfig?: {
			// Certificate authority used when verifying server certificates.
			ca?: {
				// ConfigMap containing data to use for the targets.
				configMap?: {
					// The key to select.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the ConfigMap or its key must be defined
					optional?: bool
				}

				// Secret containing data to use for the targets.
				secret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}
			}

			// Client certificate to present when doing client-authentication.
			cert?: {
				// ConfigMap containing data to use for the targets.
				configMap?: {
					// The key to select.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the ConfigMap or its key must be defined
					optional?: bool
				}

				// Secret containing data to use for the targets.
				secret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}
			}

			// Disable target certificate validation.
			insecureSkipVerify?: bool

			// Secret containing the client key file for the targets.
			keySecret?: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}

			// Maximum acceptable TLS version.
			//
			// It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
			maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"

			// Minimum acceptable TLS version.
			//
			// It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
			minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"

			// Used to verify the hostname for the targets.
			serverName?: string
		}
	}]

	// EC2SDConfigs defines a list of EC2 service discovery
	// configurations.
	ec2SDConfigs?: [...{
		// AccessKey is the AWS API key.
		accessKey?: {
			// The key of the secret to select from. Must be a valid secret
			// key.
			key!: string

			// Name of the referent.
			// This field is effectively required, but due to backwards
			// compatibility is
			// allowed to be empty. Instances of this type with an empty value
			// here are
			// almost certainly wrong.
			// More info:
			// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
			name?: string

			// Specify whether the Secret or its key must be defined
			optional?: bool
		}

		// Whether to enable HTTP2.
		// It requires Prometheus >= v2.41.0
		enableHTTP2?: bool

		// Filters can be used optionally to filter the instance list by
		// other criteria.
		// Available filter criteria can be found here:
		// https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstances.html
		// Filter API documentation:
		// https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_Filter.html
		// It requires Prometheus >= v2.3.0
		filters?: [...{
			// Name of the Filter.
			name!: string

			// Value to filter on.
			values!: [...strings.MinRunes(1)] & [_, ...]
		}]

		// Configure whether HTTP requests follow HTTP 3xx redirects.
		// It requires Prometheus >= v2.41.0
		followRedirects?: bool

		// `noProxy` is a comma-separated string that can contain IPs,
		// CIDR notation, domain names
		// that should be excluded from proxying. IP and domain names can
		// contain port numbers.
		//
		// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
		// Thanos >= v0.32.0.
		noProxy?: string

		// The port to scrape metrics from. If using the public IP
		// address, this must
		// instead be specified in the relabeling rule.
		port?: uint16

		// ProxyConnectHeader optionally specifies headers to send to
		// proxies during CONNECT requests.
		//
		// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
		// Thanos >= v0.32.0.
		proxyConnectHeader?: {
			[string]: [...{
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}]
		}

		// Whether to use the proxy configuration defined by environment
		// variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).
		//
		// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
		// Thanos >= v0.32.0.
		proxyFromEnvironment?: bool

		// `proxyURL` defines the HTTP proxy server to use.
		proxyUrl?: =~"^(http|https|socks5)://.+$"

		// RefreshInterval configures the refresh interval at which
		// Prometheus will re-read the instance list.
		refreshInterval?: =~"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$"

		// The AWS region.
		region?: strings.MinRunes(1)

		// AWS Role ARN, an alternative to using AWS API keys.
		roleARN?: strings.MinRunes(1)

		// SecretKey is the AWS API secret.
		secretKey?: {
			// The key of the secret to select from. Must be a valid secret
			// key.
			key!: string

			// Name of the referent.
			// This field is effectively required, but due to backwards
			// compatibility is
			// allowed to be empty. Instances of this type with an empty value
			// here are
			// almost certainly wrong.
			// More info:
			// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
			name?: string

			// Specify whether the Secret or its key must be defined
			optional?: bool
		}

		// TLS configuration to connect to the AWS EC2 API.
		// It requires Prometheus >= v2.41.0
		tlsConfig?: {
			// Certificate authority used when verifying server certificates.
			ca?: {
				// ConfigMap containing data to use for the targets.
				configMap?: {
					// The key to select.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the ConfigMap or its key must be defined
					optional?: bool
				}

				// Secret containing data to use for the targets.
				secret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}
			}

			// Client certificate to present when doing client-authentication.
			cert?: {
				// ConfigMap containing data to use for the targets.
				configMap?: {
					// The key to select.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the ConfigMap or its key must be defined
					optional?: bool
				}

				// Secret containing data to use for the targets.
				secret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}
			}

			// Disable target certificate validation.
			insecureSkipVerify?: bool

			// Secret containing the client key file for the targets.
			keySecret?: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}

			// Maximum acceptable TLS version.
			//
			// It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
			maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"

			// Minimum acceptable TLS version.
			//
			// It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
			minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"

			// Used to verify the hostname for the targets.
			serverName?: string
		}
	}]

	// When false, Prometheus will request uncompressed response from
	// the scraped target.
	//
	// It requires Prometheus >= v2.49.0.
	//
	// If unset, Prometheus uses true by default.
	enableCompression?: bool

	// Whether to enable HTTP2.
	enableHTTP2?: bool

	// EurekaSDConfigs defines a list of Eureka service discovery
	// configurations.
	eurekaSDConfigs?: [...{
		// Authorization header to use on every scrape request.
		authorization?: {
			// Selects a key of a Secret in the namespace that contains the
			// credentials for authentication.
			credentials?: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}

			// Defines the authentication type. The value is case-insensitive.
			//
			// "Basic" is not a supported value.
			//
			// Default: "Bearer"
			type?: string
		}

		// BasicAuth information to use on every scrape request.
		basicAuth?: {
			// `password` specifies a key of a Secret containing the password
			// for
			// authentication.
			password?: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}

			// `username` specifies a key of a Secret containing the username
			// for
			// authentication.
			username?: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}
		}

		// Whether to enable HTTP2.
		enableHTTP2?: bool

		// Configure whether HTTP requests follow HTTP 3xx redirects.
		followRedirects?: bool

		// `noProxy` is a comma-separated string that can contain IPs,
		// CIDR notation, domain names
		// that should be excluded from proxying. IP and domain names can
		// contain port numbers.
		//
		// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
		// Thanos >= v0.32.0.
		noProxy?: string

		// Optional OAuth 2.0 configuration.
		// Cannot be set at the same time as `authorization` or
		// `basic_auth`.
		oauth2?: {
			// `clientId` specifies a key of a Secret or ConfigMap containing
			// the
			// OAuth2 client's ID.
			clientId!: {
				// ConfigMap containing data to use for the targets.
				configMap?: {
					// The key to select.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the ConfigMap or its key must be defined
					optional?: bool
				}

				// Secret containing data to use for the targets.
				secret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}
			}

			// `clientSecret` specifies a key of a Secret containing the
			// OAuth2
			// client's secret.
			clientSecret!: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}

			// `endpointParams` configures the HTTP parameters to append to
			// the token
			// URL.
			endpointParams?: {
				[string]: string
			}

			// `noProxy` is a comma-separated string that can contain IPs,
			// CIDR notation, domain names
			// that should be excluded from proxying. IP and domain names can
			// contain port numbers.
			//
			// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
			// Thanos >= v0.32.0.
			noProxy?: string

			// ProxyConnectHeader optionally specifies headers to send to
			// proxies during CONNECT requests.
			//
			// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
			// Thanos >= v0.32.0.
			proxyConnectHeader?: {
				[string]: [...{
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}]
			}

			// Whether to use the proxy configuration defined by environment
			// variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).
			//
			// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
			// Thanos >= v0.32.0.
			proxyFromEnvironment?: bool

			// `proxyURL` defines the HTTP proxy server to use.
			proxyUrl?: =~"^(http|https|socks5)://.+$"

			// `scopes` defines the OAuth2 scopes used for the token request.
			scopes?: [...string]

			// TLS configuration to use when connecting to the OAuth2 server.
			// It requires Prometheus >= v2.43.0.
			tlsConfig?: {
				// Certificate authority used when verifying server certificates.
				ca?: {
					// ConfigMap containing data to use for the targets.
					configMap?: {
						// The key to select.
						key!: string

						// Name of the referent.
						// This field is effectively required, but due to backwards
						// compatibility is
						// allowed to be empty. Instances of this type with an empty value
						// here are
						// almost certainly wrong.
						// More info:
						// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
						name?: string

						// Specify whether the ConfigMap or its key must be defined
						optional?: bool
					}

					// Secret containing data to use for the targets.
					secret?: {
						// The key of the secret to select from. Must be a valid secret
						// key.
						key!: string

						// Name of the referent.
						// This field is effectively required, but due to backwards
						// compatibility is
						// allowed to be empty. Instances of this type with an empty value
						// here are
						// almost certainly wrong.
						// More info:
						// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
						name?: string

						// Specify whether the Secret or its key must be defined
						optional?: bool
					}
				}

				// Client certificate to present when doing client-authentication.
				cert?: {
					// ConfigMap containing data to use for the targets.
					configMap?: {
						// The key to select.
						key!: string

						// Name of the referent.
						// This field is effectively required, but due to backwards
						// compatibility is
						// allowed to be empty. Instances of this type with an empty value
						// here are
						// almost certainly wrong.
						// More info:
						// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
						name?: string

						// Specify whether the ConfigMap or its key must be defined
						optional?: bool
					}

					// Secret containing data to use for the targets.
					secret?: {
						// The key of the secret to select from. Must be a valid secret
						// key.
						key!: string

						// Name of the referent.
						// This field is effectively required, but due to backwards
						// compatibility is
						// allowed to be empty. Instances of this type with an empty value
						// here are
						// almost certainly wrong.
						// More info:
						// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
						name?: string

						// Specify whether the Secret or its key must be defined
						optional?: bool
					}
				}

				// Disable target certificate validation.
				insecureSkipVerify?: bool

				// Secret containing the client key file for the targets.
				keySecret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}

				// Maximum acceptable TLS version.
				//
				// It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
				maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"

				// Minimum acceptable TLS version.
				//
				// It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
				minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"

				// Used to verify the hostname for the targets.
				serverName?: string
			}

			// `tokenURL` configures the URL to fetch the token from.
			tokenUrl!: strings.MinRunes(1)
		}

		// ProxyConnectHeader optionally specifies headers to send to
		// proxies during CONNECT requests.
		//
		// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
		// Thanos >= v0.32.0.
		proxyConnectHeader?: {
			[string]: [...{
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}]
		}

		// Whether to use the proxy configuration defined by environment
		// variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).
		//
		// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
		// Thanos >= v0.32.0.
		proxyFromEnvironment?: bool

		// `proxyURL` defines the HTTP proxy server to use.
		proxyUrl?: =~"^(http|https|socks5)://.+$"

		// Refresh interval to re-read the instance list.
		refreshInterval?: =~"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$"

		// The URL to connect to the Eureka server.
		server!: strings.MinRunes(1)

		// TLS configuration applying to the target HTTP endpoint.
		tlsConfig?: {
			// Certificate authority used when verifying server certificates.
			ca?: {
				// ConfigMap containing data to use for the targets.
				configMap?: {
					// The key to select.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the ConfigMap or its key must be defined
					optional?: bool
				}

				// Secret containing data to use for the targets.
				secret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}
			}

			// Client certificate to present when doing client-authentication.
			cert?: {
				// ConfigMap containing data to use for the targets.
				configMap?: {
					// The key to select.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the ConfigMap or its key must be defined
					optional?: bool
				}

				// Secret containing data to use for the targets.
				secret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}
			}

			// Disable target certificate validation.
			insecureSkipVerify?: bool

			// Secret containing the client key file for the targets.
			keySecret?: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}

			// Maximum acceptable TLS version.
			//
			// It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
			maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"

			// Minimum acceptable TLS version.
			//
			// It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
			minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"

			// Used to verify the hostname for the targets.
			serverName?: string
		}
	}]

	// The protocol to use if a scrape returns blank, unparseable, or
	// otherwise invalid Content-Type.
	//
	// It requires Prometheus >= v3.0.0.
	fallbackScrapeProtocol?: "PrometheusProto" | "OpenMetricsText0.0.1" | "OpenMetricsText1.0.0" | "PrometheusText0.0.4" | "PrometheusText1.0.0"

	// FileSDConfigs defines a list of file service discovery
	// configurations.
	fileSDConfigs?: [...{
		// List of files to be used for file discovery. Recommendation:
		// use absolute paths. While relative paths work, the
		// prometheus-operator project makes no guarantees about the
		// working directory where the configuration file is
		// stored.
		// Files must be mounted using Prometheus.ConfigMaps or
		// Prometheus.Secrets.
		files!: [...=~"^[^*]*(\\*[^/]*)?\\.(json|yml|yaml|JSON|YML|YAML)$"] & [_, ...]

		// RefreshInterval configures the refresh interval at which
		// Prometheus will reload the content of the files.
		refreshInterval?: =~"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$"
	}]

	// GCESDConfigs defines a list of GCE service discovery
	// configurations.
	gceSDConfigs?: [...{
		// Filter can be used optionally to filter the instance list by
		// other criteria
		// Syntax of this filter is described in the filter query
		// parameter section:
		// https://cloud.google.com/compute/docs/reference/latest/instances/list
		filter?: strings.MinRunes(1)

		// The port to scrape metrics from. If using the public IP
		// address, this must
		// instead be specified in the relabeling rule.
		port?: uint16

		// The Google Cloud Project ID
		project!: strings.MinRunes(1)

		// RefreshInterval configures the refresh interval at which
		// Prometheus will re-read the instance list.
		refreshInterval?: =~"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$"

		// The tag separator is used to separate the tags on concatenation
		tagSeparator?: strings.MinRunes(1)

		// The zone of the scrape targets. If you need multiple zones use
		// multiple GCESDConfigs.
		zone!: strings.MinRunes(1)
	}]

	// HetznerSDConfigs defines a list of Hetzner service discovery
	// configurations.
	hetznerSDConfigs?: [...{
		// Authorization header configuration, required when role is
		// hcloud.
		// Role robot does not support bearer token authentication.
		authorization?: {
			// Selects a key of a Secret in the namespace that contains the
			// credentials for authentication.
			credentials?: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}

			// Defines the authentication type. The value is case-insensitive.
			//
			// "Basic" is not a supported value.
			//
			// Default: "Bearer"
			type?: string
		}

		// BasicAuth information to use on every scrape request, required
		// when role is robot.
		// Role hcloud does not support basic auth.
		basicAuth?: {
			// `password` specifies a key of a Secret containing the password
			// for
			// authentication.
			password?: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}

			// `username` specifies a key of a Secret containing the username
			// for
			// authentication.
			username?: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}
		}

		// Whether to enable HTTP2.
		enableHTTP2?: bool

		// Configure whether HTTP requests follow HTTP 3xx redirects.
		followRedirects?: bool

		// Label selector used to filter the servers when fetching them
		// from the API.
		// It requires Prometheus >= v3.5.0.
		labelSelector?: strings.MinRunes(1)

		// `noProxy` is a comma-separated string that can contain IPs,
		// CIDR notation, domain names
		// that should be excluded from proxying. IP and domain names can
		// contain port numbers.
		//
		// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
		// Thanos >= v0.32.0.
		noProxy?: string

		// Optional OAuth 2.0 configuration.
		// Cannot be used at the same time as `basic_auth` or
		// `authorization`.
		oauth2?: {
			// `clientId` specifies a key of a Secret or ConfigMap containing
			// the
			// OAuth2 client's ID.
			clientId!: {
				// ConfigMap containing data to use for the targets.
				configMap?: {
					// The key to select.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the ConfigMap or its key must be defined
					optional?: bool
				}

				// Secret containing data to use for the targets.
				secret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}
			}

			// `clientSecret` specifies a key of a Secret containing the
			// OAuth2
			// client's secret.
			clientSecret!: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}

			// `endpointParams` configures the HTTP parameters to append to
			// the token
			// URL.
			endpointParams?: {
				[string]: string
			}

			// `noProxy` is a comma-separated string that can contain IPs,
			// CIDR notation, domain names
			// that should be excluded from proxying. IP and domain names can
			// contain port numbers.
			//
			// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
			// Thanos >= v0.32.0.
			noProxy?: string

			// ProxyConnectHeader optionally specifies headers to send to
			// proxies during CONNECT requests.
			//
			// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
			// Thanos >= v0.32.0.
			proxyConnectHeader?: {
				[string]: [...{
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}]
			}

			// Whether to use the proxy configuration defined by environment
			// variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).
			//
			// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
			// Thanos >= v0.32.0.
			proxyFromEnvironment?: bool

			// `proxyURL` defines the HTTP proxy server to use.
			proxyUrl?: =~"^(http|https|socks5)://.+$"

			// `scopes` defines the OAuth2 scopes used for the token request.
			scopes?: [...string]

			// TLS configuration to use when connecting to the OAuth2 server.
			// It requires Prometheus >= v2.43.0.
			tlsConfig?: {
				// Certificate authority used when verifying server certificates.
				ca?: {
					// ConfigMap containing data to use for the targets.
					configMap?: {
						// The key to select.
						key!: string

						// Name of the referent.
						// This field is effectively required, but due to backwards
						// compatibility is
						// allowed to be empty. Instances of this type with an empty value
						// here are
						// almost certainly wrong.
						// More info:
						// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
						name?: string

						// Specify whether the ConfigMap or its key must be defined
						optional?: bool
					}

					// Secret containing data to use for the targets.
					secret?: {
						// The key of the secret to select from. Must be a valid secret
						// key.
						key!: string

						// Name of the referent.
						// This field is effectively required, but due to backwards
						// compatibility is
						// allowed to be empty. Instances of this type with an empty value
						// here are
						// almost certainly wrong.
						// More info:
						// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
						name?: string

						// Specify whether the Secret or its key must be defined
						optional?: bool
					}
				}

				// Client certificate to present when doing client-authentication.
				cert?: {
					// ConfigMap containing data to use for the targets.
					configMap?: {
						// The key to select.
						key!: string

						// Name of the referent.
						// This field is effectively required, but due to backwards
						// compatibility is
						// allowed to be empty. Instances of this type with an empty value
						// here are
						// almost certainly wrong.
						// More info:
						// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
						name?: string

						// Specify whether the ConfigMap or its key must be defined
						optional?: bool
					}

					// Secret containing data to use for the targets.
					secret?: {
						// The key of the secret to select from. Must be a valid secret
						// key.
						key!: string

						// Name of the referent.
						// This field is effectively required, but due to backwards
						// compatibility is
						// allowed to be empty. Instances of this type with an empty value
						// here are
						// almost certainly wrong.
						// More info:
						// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
						name?: string

						// Specify whether the Secret or its key must be defined
						optional?: bool
					}
				}

				// Disable target certificate validation.
				insecureSkipVerify?: bool

				// Secret containing the client key file for the targets.
				keySecret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}

				// Maximum acceptable TLS version.
				//
				// It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
				maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"

				// Minimum acceptable TLS version.
				//
				// It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
				minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"

				// Used to verify the hostname for the targets.
				serverName?: string
			}

			// `tokenURL` configures the URL to fetch the token from.
			tokenUrl!: strings.MinRunes(1)
		}

		// The port to scrape metrics from.
		port?: int

		// ProxyConnectHeader optionally specifies headers to send to
		// proxies during CONNECT requests.
		//
		// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
		// Thanos >= v0.32.0.
		proxyConnectHeader?: {
			[string]: [...{
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}]
		}

		// Whether to use the proxy configuration defined by environment
		// variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).
		//
		// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
		// Thanos >= v0.32.0.
		proxyFromEnvironment?: bool

		// `proxyURL` defines the HTTP proxy server to use.
		proxyUrl?: =~"^(http|https|socks5)://.+$"

		// The time after which the servers are refreshed.
		refreshInterval?: =~"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$"

		// The Hetzner role of entities that should be discovered.
		role!: "hcloud" | "Hcloud" | "robot" | "Robot"

		// TLS configuration to use on every scrape request.
		tlsConfig?: {
			// Certificate authority used when verifying server certificates.
			ca?: {
				// ConfigMap containing data to use for the targets.
				configMap?: {
					// The key to select.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the ConfigMap or its key must be defined
					optional?: bool
				}

				// Secret containing data to use for the targets.
				secret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}
			}

			// Client certificate to present when doing client-authentication.
			cert?: {
				// ConfigMap containing data to use for the targets.
				configMap?: {
					// The key to select.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the ConfigMap or its key must be defined
					optional?: bool
				}

				// Secret containing data to use for the targets.
				secret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}
			}

			// Disable target certificate validation.
			insecureSkipVerify?: bool

			// Secret containing the client key file for the targets.
			keySecret?: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}

			// Maximum acceptable TLS version.
			//
			// It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
			maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"

			// Minimum acceptable TLS version.
			//
			// It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
			minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"

			// Used to verify the hostname for the targets.
			serverName?: string
		}
	}]

	// HonorLabels chooses the metric's labels on collisions with
	// target labels.
	honorLabels?: bool

	// HonorTimestamps controls whether Prometheus respects the
	// timestamps present in scraped data.
	honorTimestamps?: bool

	// HTTPSDConfigs defines a list of HTTP service discovery
	// configurations.
	httpSDConfigs?: [...{
		// Authorization header configuration to authenticate against the
		// target HTTP endpoint.
		// Cannot be set at the same time as `oAuth2`, or `basicAuth`.
		authorization?: {
			// Selects a key of a Secret in the namespace that contains the
			// credentials for authentication.
			credentials?: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}

			// Defines the authentication type. The value is case-insensitive.
			//
			// "Basic" is not a supported value.
			//
			// Default: "Bearer"
			type?: string
		}

		// BasicAuth information to authenticate against the target HTTP
		// endpoint.
		// More info:
		// https://prometheus.io/docs/operating/configuration/#endpoints
		// Cannot be set at the same time as `authorization`, or `oAuth2`.
		basicAuth?: {
			// `password` specifies a key of a Secret containing the password
			// for
			// authentication.
			password?: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}

			// `username` specifies a key of a Secret containing the username
			// for
			// authentication.
			username?: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}
		}

		// Whether to enable HTTP2.
		enableHTTP2?: bool

		// Configure whether HTTP requests follow HTTP 3xx redirects.
		followRedirects?: bool

		// `noProxy` is a comma-separated string that can contain IPs,
		// CIDR notation, domain names
		// that should be excluded from proxying. IP and domain names can
		// contain port numbers.
		//
		// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
		// Thanos >= v0.32.0.
		noProxy?: string

		// Optional OAuth 2.0 configuration to authenticate against the
		// target HTTP endpoint.
		// Cannot be set at the same time as `authorization`, or
		// `basicAuth`.
		oauth2?: {
			// `clientId` specifies a key of a Secret or ConfigMap containing
			// the
			// OAuth2 client's ID.
			clientId!: {
				// ConfigMap containing data to use for the targets.
				configMap?: {
					// The key to select.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the ConfigMap or its key must be defined
					optional?: bool
				}

				// Secret containing data to use for the targets.
				secret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}
			}

			// `clientSecret` specifies a key of a Secret containing the
			// OAuth2
			// client's secret.
			clientSecret!: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}

			// `endpointParams` configures the HTTP parameters to append to
			// the token
			// URL.
			endpointParams?: {
				[string]: string
			}

			// `noProxy` is a comma-separated string that can contain IPs,
			// CIDR notation, domain names
			// that should be excluded from proxying. IP and domain names can
			// contain port numbers.
			//
			// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
			// Thanos >= v0.32.0.
			noProxy?: string

			// ProxyConnectHeader optionally specifies headers to send to
			// proxies during CONNECT requests.
			//
			// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
			// Thanos >= v0.32.0.
			proxyConnectHeader?: {
				[string]: [...{
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}]
			}

			// Whether to use the proxy configuration defined by environment
			// variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).
			//
			// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
			// Thanos >= v0.32.0.
			proxyFromEnvironment?: bool

			// `proxyURL` defines the HTTP proxy server to use.
			proxyUrl?: =~"^(http|https|socks5)://.+$"

			// `scopes` defines the OAuth2 scopes used for the token request.
			scopes?: [...string]

			// TLS configuration to use when connecting to the OAuth2 server.
			// It requires Prometheus >= v2.43.0.
			tlsConfig?: {
				// Certificate authority used when verifying server certificates.
				ca?: {
					// ConfigMap containing data to use for the targets.
					configMap?: {
						// The key to select.
						key!: string

						// Name of the referent.
						// This field is effectively required, but due to backwards
						// compatibility is
						// allowed to be empty. Instances of this type with an empty value
						// here are
						// almost certainly wrong.
						// More info:
						// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
						name?: string

						// Specify whether the ConfigMap or its key must be defined
						optional?: bool
					}

					// Secret containing data to use for the targets.
					secret?: {
						// The key of the secret to select from. Must be a valid secret
						// key.
						key!: string

						// Name of the referent.
						// This field is effectively required, but due to backwards
						// compatibility is
						// allowed to be empty. Instances of this type with an empty value
						// here are
						// almost certainly wrong.
						// More info:
						// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
						name?: string

						// Specify whether the Secret or its key must be defined
						optional?: bool
					}
				}

				// Client certificate to present when doing client-authentication.
				cert?: {
					// ConfigMap containing data to use for the targets.
					configMap?: {
						// The key to select.
						key!: string

						// Name of the referent.
						// This field is effectively required, but due to backwards
						// compatibility is
						// allowed to be empty. Instances of this type with an empty value
						// here are
						// almost certainly wrong.
						// More info:
						// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
						name?: string

						// Specify whether the ConfigMap or its key must be defined
						optional?: bool
					}

					// Secret containing data to use for the targets.
					secret?: {
						// The key of the secret to select from. Must be a valid secret
						// key.
						key!: string

						// Name of the referent.
						// This field is effectively required, but due to backwards
						// compatibility is
						// allowed to be empty. Instances of this type with an empty value
						// here are
						// almost certainly wrong.
						// More info:
						// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
						name?: string

						// Specify whether the Secret or its key must be defined
						optional?: bool
					}
				}

				// Disable target certificate validation.
				insecureSkipVerify?: bool

				// Secret containing the client key file for the targets.
				keySecret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}

				// Maximum acceptable TLS version.
				//
				// It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
				maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"

				// Minimum acceptable TLS version.
				//
				// It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
				minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"

				// Used to verify the hostname for the targets.
				serverName?: string
			}

			// `tokenURL` configures the URL to fetch the token from.
			tokenUrl!: strings.MinRunes(1)
		}

		// ProxyConnectHeader optionally specifies headers to send to
		// proxies during CONNECT requests.
		//
		// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
		// Thanos >= v0.32.0.
		proxyConnectHeader?: {
			[string]: [...{
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}]
		}

		// Whether to use the proxy configuration defined by environment
		// variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).
		//
		// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
		// Thanos >= v0.32.0.
		proxyFromEnvironment?: bool

		// `proxyURL` defines the HTTP proxy server to use.
		proxyUrl?: =~"^(http|https|socks5)://.+$"

		// RefreshInterval configures the refresh interval at which
		// Prometheus will re-query the
		// endpoint to update the target list.
		refreshInterval?: =~"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$"

		// TLS configuration applying to the target HTTP endpoint.
		tlsConfig?: {
			// Certificate authority used when verifying server certificates.
			ca?: {
				// ConfigMap containing data to use for the targets.
				configMap?: {
					// The key to select.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the ConfigMap or its key must be defined
					optional?: bool
				}

				// Secret containing data to use for the targets.
				secret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}
			}

			// Client certificate to present when doing client-authentication.
			cert?: {
				// ConfigMap containing data to use for the targets.
				configMap?: {
					// The key to select.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the ConfigMap or its key must be defined
					optional?: bool
				}

				// Secret containing data to use for the targets.
				secret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}
			}

			// Disable target certificate validation.
			insecureSkipVerify?: bool

			// Secret containing the client key file for the targets.
			keySecret?: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}

			// Maximum acceptable TLS version.
			//
			// It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
			maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"

			// Minimum acceptable TLS version.
			//
			// It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
			minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"

			// Used to verify the hostname for the targets.
			serverName?: string
		}

		// URL from which the targets are fetched.
		url!: strings.MinRunes(1) & {
			=~"^http(s)?://.+$"
		}
	}]

	// IonosSDConfigs defines a list of IONOS service discovery
	// configurations.
	ionosSDConfigs?: [...{
		// Authorization` header configuration, required when using IONOS.
		authorization!: {
			// Selects a key of a Secret in the namespace that contains the
			// credentials for authentication.
			credentials?: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}

			// Defines the authentication type. The value is case-insensitive.
			//
			// "Basic" is not a supported value.
			//
			// Default: "Bearer"
			type?: string
		}

		// The unique ID of the IONOS data center.
		datacenterID!: strings.MinRunes(1)

		// Configure whether to enable HTTP2.
		enableHTTP2?: bool

		// Configure whether the HTTP requests should follow HTTP 3xx
		// redirects.
		followRedirects?: bool

		// `noProxy` is a comma-separated string that can contain IPs,
		// CIDR notation, domain names
		// that should be excluded from proxying. IP and domain names can
		// contain port numbers.
		//
		// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
		// Thanos >= v0.32.0.
		noProxy?: string

		// Configure whether to enable OAuth2.
		oauth2?: {
			// `clientId` specifies a key of a Secret or ConfigMap containing
			// the
			// OAuth2 client's ID.
			clientId!: {
				// ConfigMap containing data to use for the targets.
				configMap?: {
					// The key to select.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the ConfigMap or its key must be defined
					optional?: bool
				}

				// Secret containing data to use for the targets.
				secret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}
			}

			// `clientSecret` specifies a key of a Secret containing the
			// OAuth2
			// client's secret.
			clientSecret!: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}

			// `endpointParams` configures the HTTP parameters to append to
			// the token
			// URL.
			endpointParams?: {
				[string]: string
			}

			// `noProxy` is a comma-separated string that can contain IPs,
			// CIDR notation, domain names
			// that should be excluded from proxying. IP and domain names can
			// contain port numbers.
			//
			// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
			// Thanos >= v0.32.0.
			noProxy?: string

			// ProxyConnectHeader optionally specifies headers to send to
			// proxies during CONNECT requests.
			//
			// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
			// Thanos >= v0.32.0.
			proxyConnectHeader?: {
				[string]: [...{
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}]
			}

			// Whether to use the proxy configuration defined by environment
			// variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).
			//
			// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
			// Thanos >= v0.32.0.
			proxyFromEnvironment?: bool

			// `proxyURL` defines the HTTP proxy server to use.
			proxyUrl?: =~"^(http|https|socks5)://.+$"

			// `scopes` defines the OAuth2 scopes used for the token request.
			scopes?: [...string]

			// TLS configuration to use when connecting to the OAuth2 server.
			// It requires Prometheus >= v2.43.0.
			tlsConfig?: {
				// Certificate authority used when verifying server certificates.
				ca?: {
					// ConfigMap containing data to use for the targets.
					configMap?: {
						// The key to select.
						key!: string

						// Name of the referent.
						// This field is effectively required, but due to backwards
						// compatibility is
						// allowed to be empty. Instances of this type with an empty value
						// here are
						// almost certainly wrong.
						// More info:
						// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
						name?: string

						// Specify whether the ConfigMap or its key must be defined
						optional?: bool
					}

					// Secret containing data to use for the targets.
					secret?: {
						// The key of the secret to select from. Must be a valid secret
						// key.
						key!: string

						// Name of the referent.
						// This field is effectively required, but due to backwards
						// compatibility is
						// allowed to be empty. Instances of this type with an empty value
						// here are
						// almost certainly wrong.
						// More info:
						// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
						name?: string

						// Specify whether the Secret or its key must be defined
						optional?: bool
					}
				}

				// Client certificate to present when doing client-authentication.
				cert?: {
					// ConfigMap containing data to use for the targets.
					configMap?: {
						// The key to select.
						key!: string

						// Name of the referent.
						// This field is effectively required, but due to backwards
						// compatibility is
						// allowed to be empty. Instances of this type with an empty value
						// here are
						// almost certainly wrong.
						// More info:
						// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
						name?: string

						// Specify whether the ConfigMap or its key must be defined
						optional?: bool
					}

					// Secret containing data to use for the targets.
					secret?: {
						// The key of the secret to select from. Must be a valid secret
						// key.
						key!: string

						// Name of the referent.
						// This field is effectively required, but due to backwards
						// compatibility is
						// allowed to be empty. Instances of this type with an empty value
						// here are
						// almost certainly wrong.
						// More info:
						// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
						name?: string

						// Specify whether the Secret or its key must be defined
						optional?: bool
					}
				}

				// Disable target certificate validation.
				insecureSkipVerify?: bool

				// Secret containing the client key file for the targets.
				keySecret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}

				// Maximum acceptable TLS version.
				//
				// It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
				maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"

				// Minimum acceptable TLS version.
				//
				// It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
				minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"

				// Used to verify the hostname for the targets.
				serverName?: string
			}

			// `tokenURL` configures the URL to fetch the token from.
			tokenUrl!: strings.MinRunes(1)
		}

		// Port to scrape the metrics from.
		port?: uint16

		// ProxyConnectHeader optionally specifies headers to send to
		// proxies during CONNECT requests.
		//
		// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
		// Thanos >= v0.32.0.
		proxyConnectHeader?: {
			[string]: [...{
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}]
		}

		// Whether to use the proxy configuration defined by environment
		// variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).
		//
		// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
		// Thanos >= v0.32.0.
		proxyFromEnvironment?: bool

		// `proxyURL` defines the HTTP proxy server to use.
		proxyUrl?: =~"^(http|https|socks5)://.+$"

		// Refresh interval to re-read the list of resources.
		refreshInterval?: =~"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$"

		// TLS configuration to use when connecting to the IONOS API.
		tlsConfig?: {
			// Certificate authority used when verifying server certificates.
			ca?: {
				// ConfigMap containing data to use for the targets.
				configMap?: {
					// The key to select.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the ConfigMap or its key must be defined
					optional?: bool
				}

				// Secret containing data to use for the targets.
				secret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}
			}

			// Client certificate to present when doing client-authentication.
			cert?: {
				// ConfigMap containing data to use for the targets.
				configMap?: {
					// The key to select.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the ConfigMap or its key must be defined
					optional?: bool
				}

				// Secret containing data to use for the targets.
				secret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}
			}

			// Disable target certificate validation.
			insecureSkipVerify?: bool

			// Secret containing the client key file for the targets.
			keySecret?: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}

			// Maximum acceptable TLS version.
			//
			// It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
			maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"

			// Minimum acceptable TLS version.
			//
			// It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
			minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"

			// Used to verify the hostname for the targets.
			serverName?: string
		}
	}]

	// The value of the `job` label assigned to the scraped metrics by
	// default.
	//
	// The `job_name` field in the rendered scrape configuration is
	// always controlled by the
	// operator to prevent duplicate job names, which Prometheus does
	// not allow. Instead the
	// `job` label is set by means of relabeling configs.
	jobName?: strings.MinRunes(1)

	// Per-scrape limit on the number of targets dropped by relabeling
	// that will be kept in memory. 0 means no limit.
	//
	// It requires Prometheus >= v2.47.0.
	keepDroppedTargets?: int64

	// KubernetesSDConfigs defines a list of Kubernetes service
	// discovery configurations.
	kubernetesSDConfigs?: [...{
		// The API server address consisting of a hostname or IP address
		// followed
		// by an optional port number.
		// If left empty, Prometheus is assumed to run inside
		// of the cluster. It will discover API servers automatically and
		// use the pod's
		// CA certificate and bearer token file at
		// /var/run/secrets/kubernetes.io/serviceaccount/.
		apiServer?: strings.MinRunes(1)
		attachMetadata?: {
			// Attaches node metadata to discovered targets.
			// When set to true, Prometheus must have the `get` permission on
			// the
			// `Nodes` objects.
			// Only valid for Pod, Endpoint and Endpointslice roles.
			node?: bool
		}

		// Authorization header to use on every scrape request.
		// Cannot be set at the same time as `basicAuth`, or `oauth2`.
		authorization?: {
			// Selects a key of a Secret in the namespace that contains the
			// credentials for authentication.
			credentials?: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}

			// Defines the authentication type. The value is case-insensitive.
			//
			// "Basic" is not a supported value.
			//
			// Default: "Bearer"
			type?: string
		}

		// BasicAuth information to use on every scrape request.
		// Cannot be set at the same time as `authorization`, or `oauth2`.
		basicAuth?: {
			// `password` specifies a key of a Secret containing the password
			// for
			// authentication.
			password?: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}

			// `username` specifies a key of a Secret containing the username
			// for
			// authentication.
			username?: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}
		}

		// Whether to enable HTTP2.
		enableHTTP2?: bool

		// Configure whether HTTP requests follow HTTP 3xx redirects.
		followRedirects?: bool

		// Optional namespace discovery. If omitted, Prometheus discovers
		// targets across all namespaces.
		namespaces?: {
			// List of namespaces where to watch for resources.
			// If empty and `ownNamespace` isn't true, Prometheus watches for
			// resources in all namespaces.
			names?: [...string]

			// Includes the namespace in which the Prometheus pod runs to the
			// list of watched namespaces.
			ownNamespace?: bool
		}

		// `noProxy` is a comma-separated string that can contain IPs,
		// CIDR notation, domain names
		// that should be excluded from proxying. IP and domain names can
		// contain port numbers.
		//
		// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
		// Thanos >= v0.32.0.
		noProxy?: string

		// Optional OAuth 2.0 configuration.
		// Cannot be set at the same time as `authorization`, or
		// `basicAuth`.
		oauth2?: {
			// `clientId` specifies a key of a Secret or ConfigMap containing
			// the
			// OAuth2 client's ID.
			clientId!: {
				// ConfigMap containing data to use for the targets.
				configMap?: {
					// The key to select.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the ConfigMap or its key must be defined
					optional?: bool
				}

				// Secret containing data to use for the targets.
				secret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}
			}

			// `clientSecret` specifies a key of a Secret containing the
			// OAuth2
			// client's secret.
			clientSecret!: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}

			// `endpointParams` configures the HTTP parameters to append to
			// the token
			// URL.
			endpointParams?: {
				[string]: string
			}

			// `noProxy` is a comma-separated string that can contain IPs,
			// CIDR notation, domain names
			// that should be excluded from proxying. IP and domain names can
			// contain port numbers.
			//
			// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
			// Thanos >= v0.32.0.
			noProxy?: string

			// ProxyConnectHeader optionally specifies headers to send to
			// proxies during CONNECT requests.
			//
			// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
			// Thanos >= v0.32.0.
			proxyConnectHeader?: {
				[string]: [...{
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}]
			}

			// Whether to use the proxy configuration defined by environment
			// variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).
			//
			// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
			// Thanos >= v0.32.0.
			proxyFromEnvironment?: bool

			// `proxyURL` defines the HTTP proxy server to use.
			proxyUrl?: =~"^(http|https|socks5)://.+$"

			// `scopes` defines the OAuth2 scopes used for the token request.
			scopes?: [...string]

			// TLS configuration to use when connecting to the OAuth2 server.
			// It requires Prometheus >= v2.43.0.
			tlsConfig?: {
				// Certificate authority used when verifying server certificates.
				ca?: {
					// ConfigMap containing data to use for the targets.
					configMap?: {
						// The key to select.
						key!: string

						// Name of the referent.
						// This field is effectively required, but due to backwards
						// compatibility is
						// allowed to be empty. Instances of this type with an empty value
						// here are
						// almost certainly wrong.
						// More info:
						// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
						name?: string

						// Specify whether the ConfigMap or its key must be defined
						optional?: bool
					}

					// Secret containing data to use for the targets.
					secret?: {
						// The key of the secret to select from. Must be a valid secret
						// key.
						key!: string

						// Name of the referent.
						// This field is effectively required, but due to backwards
						// compatibility is
						// allowed to be empty. Instances of this type with an empty value
						// here are
						// almost certainly wrong.
						// More info:
						// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
						name?: string

						// Specify whether the Secret or its key must be defined
						optional?: bool
					}
				}

				// Client certificate to present when doing client-authentication.
				cert?: {
					// ConfigMap containing data to use for the targets.
					configMap?: {
						// The key to select.
						key!: string

						// Name of the referent.
						// This field is effectively required, but due to backwards
						// compatibility is
						// allowed to be empty. Instances of this type with an empty value
						// here are
						// almost certainly wrong.
						// More info:
						// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
						name?: string

						// Specify whether the ConfigMap or its key must be defined
						optional?: bool
					}

					// Secret containing data to use for the targets.
					secret?: {
						// The key of the secret to select from. Must be a valid secret
						// key.
						key!: string

						// Name of the referent.
						// This field is effectively required, but due to backwards
						// compatibility is
						// allowed to be empty. Instances of this type with an empty value
						// here are
						// almost certainly wrong.
						// More info:
						// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
						name?: string

						// Specify whether the Secret or its key must be defined
						optional?: bool
					}
				}

				// Disable target certificate validation.
				insecureSkipVerify?: bool

				// Secret containing the client key file for the targets.
				keySecret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}

				// Maximum acceptable TLS version.
				//
				// It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
				maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"

				// Minimum acceptable TLS version.
				//
				// It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
				minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"

				// Used to verify the hostname for the targets.
				serverName?: string
			}

			// `tokenURL` configures the URL to fetch the token from.
			tokenUrl!: strings.MinRunes(1)
		}

		// ProxyConnectHeader optionally specifies headers to send to
		// proxies during CONNECT requests.
		//
		// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
		// Thanos >= v0.32.0.
		proxyConnectHeader?: {
			[string]: [...{
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}]
		}

		// Whether to use the proxy configuration defined by environment
		// variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).
		//
		// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
		// Thanos >= v0.32.0.
		proxyFromEnvironment?: bool

		// `proxyURL` defines the HTTP proxy server to use.
		proxyUrl?: =~"^(http|https|socks5)://.+$"

		// Role of the Kubernetes entities that should be discovered.
		// Role `Endpointslice` requires Prometheus >= v2.21.0
		role!: "Pod" | "Endpoints" | "Ingress" | "Service" | "Node" | "EndpointSlice"

		// Selector to select objects.
		// It requires Prometheus >= v2.17.0
		selectors?: [...{
			// An optional field selector to limit the service discovery to
			// resources which have fields with specific values.
			// e.g: `metadata.name=foobar`
			field?: strings.MinRunes(1)

			// An optional label selector to limit the service discovery to
			// resources with specific labels and label values.
			// e.g: `node.kubernetes.io/instance-type=master`
			label?: strings.MinRunes(1)

			// Role specifies the type of Kubernetes resource to limit the
			// service discovery to.
			// Accepted values are: Node, Pod, Endpoints, EndpointSlice,
			// Service, Ingress.
			role!: "Pod" | "Endpoints" | "Ingress" | "Service" | "Node" | "EndpointSlice"
		}]

		// TLS configuration to connect to the Kubernetes API.
		tlsConfig?: {
			// Certificate authority used when verifying server certificates.
			ca?: {
				// ConfigMap containing data to use for the targets.
				configMap?: {
					// The key to select.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the ConfigMap or its key must be defined
					optional?: bool
				}

				// Secret containing data to use for the targets.
				secret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}
			}

			// Client certificate to present when doing client-authentication.
			cert?: {
				// ConfigMap containing data to use for the targets.
				configMap?: {
					// The key to select.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the ConfigMap or its key must be defined
					optional?: bool
				}

				// Secret containing data to use for the targets.
				secret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}
			}

			// Disable target certificate validation.
			insecureSkipVerify?: bool

			// Secret containing the client key file for the targets.
			keySecret?: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}

			// Maximum acceptable TLS version.
			//
			// It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
			maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"

			// Minimum acceptable TLS version.
			//
			// It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
			minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"

			// Used to verify the hostname for the targets.
			serverName?: string
		}
	}]

	// KumaSDConfigs defines a list of Kuma service discovery
	// configurations.
	kumaSDConfigs?: [...{
		// Authorization header to use on every scrape request.
		authorization?: {
			// Selects a key of a Secret in the namespace that contains the
			// credentials for authentication.
			credentials?: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}

			// Defines the authentication type. The value is case-insensitive.
			//
			// "Basic" is not a supported value.
			//
			// Default: "Bearer"
			type?: string
		}

		// BasicAuth information to use on every scrape request.
		basicAuth?: {
			// `password` specifies a key of a Secret containing the password
			// for
			// authentication.
			password?: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}

			// `username` specifies a key of a Secret containing the username
			// for
			// authentication.
			username?: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}
		}

		// Client id is used by Kuma Control Plane to compute Monitoring
		// Assignment for specific Prometheus backend.
		clientID?: string

		// Whether to enable HTTP2.
		enableHTTP2?: bool

		// The time after which the monitoring assignments are refreshed.
		fetchTimeout?: =~"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$"

		// Configure whether HTTP requests follow HTTP 3xx redirects.
		followRedirects?: bool

		// `noProxy` is a comma-separated string that can contain IPs,
		// CIDR notation, domain names
		// that should be excluded from proxying. IP and domain names can
		// contain port numbers.
		//
		// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
		// Thanos >= v0.32.0.
		noProxy?: string

		// Optional OAuth 2.0 configuration.
		// Cannot be set at the same time as `authorization`, or
		// `basicAuth`.
		oauth2?: {
			// `clientId` specifies a key of a Secret or ConfigMap containing
			// the
			// OAuth2 client's ID.
			clientId!: {
				// ConfigMap containing data to use for the targets.
				configMap?: {
					// The key to select.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the ConfigMap or its key must be defined
					optional?: bool
				}

				// Secret containing data to use for the targets.
				secret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}
			}

			// `clientSecret` specifies a key of a Secret containing the
			// OAuth2
			// client's secret.
			clientSecret!: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}

			// `endpointParams` configures the HTTP parameters to append to
			// the token
			// URL.
			endpointParams?: {
				[string]: string
			}

			// `noProxy` is a comma-separated string that can contain IPs,
			// CIDR notation, domain names
			// that should be excluded from proxying. IP and domain names can
			// contain port numbers.
			//
			// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
			// Thanos >= v0.32.0.
			noProxy?: string

			// ProxyConnectHeader optionally specifies headers to send to
			// proxies during CONNECT requests.
			//
			// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
			// Thanos >= v0.32.0.
			proxyConnectHeader?: {
				[string]: [...{
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}]
			}

			// Whether to use the proxy configuration defined by environment
			// variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).
			//
			// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
			// Thanos >= v0.32.0.
			proxyFromEnvironment?: bool

			// `proxyURL` defines the HTTP proxy server to use.
			proxyUrl?: =~"^(http|https|socks5)://.+$"

			// `scopes` defines the OAuth2 scopes used for the token request.
			scopes?: [...string]

			// TLS configuration to use when connecting to the OAuth2 server.
			// It requires Prometheus >= v2.43.0.
			tlsConfig?: {
				// Certificate authority used when verifying server certificates.
				ca?: {
					// ConfigMap containing data to use for the targets.
					configMap?: {
						// The key to select.
						key!: string

						// Name of the referent.
						// This field is effectively required, but due to backwards
						// compatibility is
						// allowed to be empty. Instances of this type with an empty value
						// here are
						// almost certainly wrong.
						// More info:
						// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
						name?: string

						// Specify whether the ConfigMap or its key must be defined
						optional?: bool
					}

					// Secret containing data to use for the targets.
					secret?: {
						// The key of the secret to select from. Must be a valid secret
						// key.
						key!: string

						// Name of the referent.
						// This field is effectively required, but due to backwards
						// compatibility is
						// allowed to be empty. Instances of this type with an empty value
						// here are
						// almost certainly wrong.
						// More info:
						// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
						name?: string

						// Specify whether the Secret or its key must be defined
						optional?: bool
					}
				}

				// Client certificate to present when doing client-authentication.
				cert?: {
					// ConfigMap containing data to use for the targets.
					configMap?: {
						// The key to select.
						key!: string

						// Name of the referent.
						// This field is effectively required, but due to backwards
						// compatibility is
						// allowed to be empty. Instances of this type with an empty value
						// here are
						// almost certainly wrong.
						// More info:
						// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
						name?: string

						// Specify whether the ConfigMap or its key must be defined
						optional?: bool
					}

					// Secret containing data to use for the targets.
					secret?: {
						// The key of the secret to select from. Must be a valid secret
						// key.
						key!: string

						// Name of the referent.
						// This field is effectively required, but due to backwards
						// compatibility is
						// allowed to be empty. Instances of this type with an empty value
						// here are
						// almost certainly wrong.
						// More info:
						// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
						name?: string

						// Specify whether the Secret or its key must be defined
						optional?: bool
					}
				}

				// Disable target certificate validation.
				insecureSkipVerify?: bool

				// Secret containing the client key file for the targets.
				keySecret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}

				// Maximum acceptable TLS version.
				//
				// It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
				maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"

				// Minimum acceptable TLS version.
				//
				// It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
				minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"

				// Used to verify the hostname for the targets.
				serverName?: string
			}

			// `tokenURL` configures the URL to fetch the token from.
			tokenUrl!: strings.MinRunes(1)
		}

		// ProxyConnectHeader optionally specifies headers to send to
		// proxies during CONNECT requests.
		//
		// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
		// Thanos >= v0.32.0.
		proxyConnectHeader?: {
			[string]: [...{
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}]
		}

		// Whether to use the proxy configuration defined by environment
		// variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).
		//
		// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
		// Thanos >= v0.32.0.
		proxyFromEnvironment?: bool

		// `proxyURL` defines the HTTP proxy server to use.
		proxyUrl?: =~"^(http|https|socks5)://.+$"

		// The time to wait between polling update requests.
		refreshInterval?: =~"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$"

		// Address of the Kuma Control Plane's MADS xDS server.
		server!: strings.MinRunes(1)

		// TLS configuration to use on every scrape request
		tlsConfig?: {
			// Certificate authority used when verifying server certificates.
			ca?: {
				// ConfigMap containing data to use for the targets.
				configMap?: {
					// The key to select.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the ConfigMap or its key must be defined
					optional?: bool
				}

				// Secret containing data to use for the targets.
				secret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}
			}

			// Client certificate to present when doing client-authentication.
			cert?: {
				// ConfigMap containing data to use for the targets.
				configMap?: {
					// The key to select.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the ConfigMap or its key must be defined
					optional?: bool
				}

				// Secret containing data to use for the targets.
				secret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}
			}

			// Disable target certificate validation.
			insecureSkipVerify?: bool

			// Secret containing the client key file for the targets.
			keySecret?: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}

			// Maximum acceptable TLS version.
			//
			// It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
			maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"

			// Minimum acceptable TLS version.
			//
			// It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
			minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"

			// Used to verify the hostname for the targets.
			serverName?: string
		}
	}]

	// Per-scrape limit on number of labels that will be accepted for
	// a sample.
	// Only valid in Prometheus versions 2.27.0 and newer.
	labelLimit?: int64

	// Per-scrape limit on length of labels name that will be accepted
	// for a sample.
	// Only valid in Prometheus versions 2.27.0 and newer.
	labelNameLengthLimit?: int64

	// Per-scrape limit on length of labels value that will be
	// accepted for a sample.
	// Only valid in Prometheus versions 2.27.0 and newer.
	labelValueLengthLimit?: int64

	// LightsailSDConfigs defines a list of Lightsail service
	// discovery configurations.
	lightSailSDConfigs?: [...{
		// AccessKey is the AWS API key.
		accessKey?: {
			// The key of the secret to select from. Must be a valid secret
			// key.
			key!: string

			// Name of the referent.
			// This field is effectively required, but due to backwards
			// compatibility is
			// allowed to be empty. Instances of this type with an empty value
			// here are
			// almost certainly wrong.
			// More info:
			// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
			name?: string

			// Specify whether the Secret or its key must be defined
			optional?: bool
		}

		// Optional `authorization` HTTP header configuration.
		// Cannot be set at the same time as `basicAuth`, or `oauth2`.
		authorization?: {
			// Selects a key of a Secret in the namespace that contains the
			// credentials for authentication.
			credentials?: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}

			// Defines the authentication type. The value is case-insensitive.
			//
			// "Basic" is not a supported value.
			//
			// Default: "Bearer"
			type?: string
		}

		// Optional HTTP basic authentication information.
		// Cannot be set at the same time as `authorization`, or `oauth2`.
		basicAuth?: {
			// `password` specifies a key of a Secret containing the password
			// for
			// authentication.
			password?: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}

			// `username` specifies a key of a Secret containing the username
			// for
			// authentication.
			username?: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}
		}

		// Configure whether to enable HTTP2.
		enableHTTP2?: bool

		// Custom endpoint to be used.
		endpoint?: strings.MinRunes(1)

		// Configure whether the HTTP requests should follow HTTP 3xx
		// redirects.
		followRedirects?: bool

		// `noProxy` is a comma-separated string that can contain IPs,
		// CIDR notation, domain names
		// that should be excluded from proxying. IP and domain names can
		// contain port numbers.
		//
		// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
		// Thanos >= v0.32.0.
		noProxy?: string

		// Optional OAuth2.0 configuration.
		// Cannot be set at the same time as `basicAuth`, or
		// `authorization`.
		oauth2?: {
			// `clientId` specifies a key of a Secret or ConfigMap containing
			// the
			// OAuth2 client's ID.
			clientId!: {
				// ConfigMap containing data to use for the targets.
				configMap?: {
					// The key to select.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the ConfigMap or its key must be defined
					optional?: bool
				}

				// Secret containing data to use for the targets.
				secret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}
			}

			// `clientSecret` specifies a key of a Secret containing the
			// OAuth2
			// client's secret.
			clientSecret!: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}

			// `endpointParams` configures the HTTP parameters to append to
			// the token
			// URL.
			endpointParams?: {
				[string]: string
			}

			// `noProxy` is a comma-separated string that can contain IPs,
			// CIDR notation, domain names
			// that should be excluded from proxying. IP and domain names can
			// contain port numbers.
			//
			// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
			// Thanos >= v0.32.0.
			noProxy?: string

			// ProxyConnectHeader optionally specifies headers to send to
			// proxies during CONNECT requests.
			//
			// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
			// Thanos >= v0.32.0.
			proxyConnectHeader?: {
				[string]: [...{
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}]
			}

			// Whether to use the proxy configuration defined by environment
			// variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).
			//
			// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
			// Thanos >= v0.32.0.
			proxyFromEnvironment?: bool

			// `proxyURL` defines the HTTP proxy server to use.
			proxyUrl?: =~"^(http|https|socks5)://.+$"

			// `scopes` defines the OAuth2 scopes used for the token request.
			scopes?: [...string]

			// TLS configuration to use when connecting to the OAuth2 server.
			// It requires Prometheus >= v2.43.0.
			tlsConfig?: {
				// Certificate authority used when verifying server certificates.
				ca?: {
					// ConfigMap containing data to use for the targets.
					configMap?: {
						// The key to select.
						key!: string

						// Name of the referent.
						// This field is effectively required, but due to backwards
						// compatibility is
						// allowed to be empty. Instances of this type with an empty value
						// here are
						// almost certainly wrong.
						// More info:
						// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
						name?: string

						// Specify whether the ConfigMap or its key must be defined
						optional?: bool
					}

					// Secret containing data to use for the targets.
					secret?: {
						// The key of the secret to select from. Must be a valid secret
						// key.
						key!: string

						// Name of the referent.
						// This field is effectively required, but due to backwards
						// compatibility is
						// allowed to be empty. Instances of this type with an empty value
						// here are
						// almost certainly wrong.
						// More info:
						// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
						name?: string

						// Specify whether the Secret or its key must be defined
						optional?: bool
					}
				}

				// Client certificate to present when doing client-authentication.
				cert?: {
					// ConfigMap containing data to use for the targets.
					configMap?: {
						// The key to select.
						key!: string

						// Name of the referent.
						// This field is effectively required, but due to backwards
						// compatibility is
						// allowed to be empty. Instances of this type with an empty value
						// here are
						// almost certainly wrong.
						// More info:
						// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
						name?: string

						// Specify whether the ConfigMap or its key must be defined
						optional?: bool
					}

					// Secret containing data to use for the targets.
					secret?: {
						// The key of the secret to select from. Must be a valid secret
						// key.
						key!: string

						// Name of the referent.
						// This field is effectively required, but due to backwards
						// compatibility is
						// allowed to be empty. Instances of this type with an empty value
						// here are
						// almost certainly wrong.
						// More info:
						// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
						name?: string

						// Specify whether the Secret or its key must be defined
						optional?: bool
					}
				}

				// Disable target certificate validation.
				insecureSkipVerify?: bool

				// Secret containing the client key file for the targets.
				keySecret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}

				// Maximum acceptable TLS version.
				//
				// It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
				maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"

				// Minimum acceptable TLS version.
				//
				// It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
				minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"

				// Used to verify the hostname for the targets.
				serverName?: string
			}

			// `tokenURL` configures the URL to fetch the token from.
			tokenUrl!: strings.MinRunes(1)
		}

		// Port to scrape the metrics from.
		// If using the public IP address, this must instead be specified
		// in the relabeling rule.
		port?: uint16

		// ProxyConnectHeader optionally specifies headers to send to
		// proxies during CONNECT requests.
		//
		// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
		// Thanos >= v0.32.0.
		proxyConnectHeader?: {
			[string]: [...{
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}]
		}

		// Whether to use the proxy configuration defined by environment
		// variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).
		//
		// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
		// Thanos >= v0.32.0.
		proxyFromEnvironment?: bool

		// `proxyURL` defines the HTTP proxy server to use.
		proxyUrl?: =~"^(http|https|socks5)://.+$"

		// Refresh interval to re-read the list of instances.
		refreshInterval?: =~"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$"

		// The AWS region.
		region?: strings.MinRunes(1)

		// AWS Role ARN, an alternative to using AWS API keys.
		roleARN?: string

		// SecretKey is the AWS API secret.
		secretKey?: {
			// The key of the secret to select from. Must be a valid secret
			// key.
			key!: string

			// Name of the referent.
			// This field is effectively required, but due to backwards
			// compatibility is
			// allowed to be empty. Instances of this type with an empty value
			// here are
			// almost certainly wrong.
			// More info:
			// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
			name?: string

			// Specify whether the Secret or its key must be defined
			optional?: bool
		}

		// TLS configuration to connect to the Puppet DB.
		tlsConfig?: {
			// Certificate authority used when verifying server certificates.
			ca?: {
				// ConfigMap containing data to use for the targets.
				configMap?: {
					// The key to select.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the ConfigMap or its key must be defined
					optional?: bool
				}

				// Secret containing data to use for the targets.
				secret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}
			}

			// Client certificate to present when doing client-authentication.
			cert?: {
				// ConfigMap containing data to use for the targets.
				configMap?: {
					// The key to select.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the ConfigMap or its key must be defined
					optional?: bool
				}

				// Secret containing data to use for the targets.
				secret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}
			}

			// Disable target certificate validation.
			insecureSkipVerify?: bool

			// Secret containing the client key file for the targets.
			keySecret?: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}

			// Maximum acceptable TLS version.
			//
			// It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
			maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"

			// Minimum acceptable TLS version.
			//
			// It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
			minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"

			// Used to verify the hostname for the targets.
			serverName?: string
		}
	}]

	// LinodeSDConfigs defines a list of Linode service discovery
	// configurations.
	linodeSDConfigs?: [...{
		// Authorization header configuration.
		authorization?: {
			// Selects a key of a Secret in the namespace that contains the
			// credentials for authentication.
			credentials?: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}

			// Defines the authentication type. The value is case-insensitive.
			//
			// "Basic" is not a supported value.
			//
			// Default: "Bearer"
			type?: string
		}

		// Whether to enable HTTP2.
		enableHTTP2?: bool

		// Configure whether HTTP requests follow HTTP 3xx redirects.
		followRedirects?: bool

		// `noProxy` is a comma-separated string that can contain IPs,
		// CIDR notation, domain names
		// that should be excluded from proxying. IP and domain names can
		// contain port numbers.
		//
		// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
		// Thanos >= v0.32.0.
		noProxy?: string

		// Optional OAuth 2.0 configuration.
		// Cannot be used at the same time as `authorization`.
		oauth2?: {
			// `clientId` specifies a key of a Secret or ConfigMap containing
			// the
			// OAuth2 client's ID.
			clientId!: {
				// ConfigMap containing data to use for the targets.
				configMap?: {
					// The key to select.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the ConfigMap or its key must be defined
					optional?: bool
				}

				// Secret containing data to use for the targets.
				secret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}
			}

			// `clientSecret` specifies a key of a Secret containing the
			// OAuth2
			// client's secret.
			clientSecret!: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}

			// `endpointParams` configures the HTTP parameters to append to
			// the token
			// URL.
			endpointParams?: {
				[string]: string
			}

			// `noProxy` is a comma-separated string that can contain IPs,
			// CIDR notation, domain names
			// that should be excluded from proxying. IP and domain names can
			// contain port numbers.
			//
			// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
			// Thanos >= v0.32.0.
			noProxy?: string

			// ProxyConnectHeader optionally specifies headers to send to
			// proxies during CONNECT requests.
			//
			// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
			// Thanos >= v0.32.0.
			proxyConnectHeader?: {
				[string]: [...{
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}]
			}

			// Whether to use the proxy configuration defined by environment
			// variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).
			//
			// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
			// Thanos >= v0.32.0.
			proxyFromEnvironment?: bool

			// `proxyURL` defines the HTTP proxy server to use.
			proxyUrl?: =~"^(http|https|socks5)://.+$"

			// `scopes` defines the OAuth2 scopes used for the token request.
			scopes?: [...string]

			// TLS configuration to use when connecting to the OAuth2 server.
			// It requires Prometheus >= v2.43.0.
			tlsConfig?: {
				// Certificate authority used when verifying server certificates.
				ca?: {
					// ConfigMap containing data to use for the targets.
					configMap?: {
						// The key to select.
						key!: string

						// Name of the referent.
						// This field is effectively required, but due to backwards
						// compatibility is
						// allowed to be empty. Instances of this type with an empty value
						// here are
						// almost certainly wrong.
						// More info:
						// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
						name?: string

						// Specify whether the ConfigMap or its key must be defined
						optional?: bool
					}

					// Secret containing data to use for the targets.
					secret?: {
						// The key of the secret to select from. Must be a valid secret
						// key.
						key!: string

						// Name of the referent.
						// This field is effectively required, but due to backwards
						// compatibility is
						// allowed to be empty. Instances of this type with an empty value
						// here are
						// almost certainly wrong.
						// More info:
						// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
						name?: string

						// Specify whether the Secret or its key must be defined
						optional?: bool
					}
				}

				// Client certificate to present when doing client-authentication.
				cert?: {
					// ConfigMap containing data to use for the targets.
					configMap?: {
						// The key to select.
						key!: string

						// Name of the referent.
						// This field is effectively required, but due to backwards
						// compatibility is
						// allowed to be empty. Instances of this type with an empty value
						// here are
						// almost certainly wrong.
						// More info:
						// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
						name?: string

						// Specify whether the ConfigMap or its key must be defined
						optional?: bool
					}

					// Secret containing data to use for the targets.
					secret?: {
						// The key of the secret to select from. Must be a valid secret
						// key.
						key!: string

						// Name of the referent.
						// This field is effectively required, but due to backwards
						// compatibility is
						// allowed to be empty. Instances of this type with an empty value
						// here are
						// almost certainly wrong.
						// More info:
						// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
						name?: string

						// Specify whether the Secret or its key must be defined
						optional?: bool
					}
				}

				// Disable target certificate validation.
				insecureSkipVerify?: bool

				// Secret containing the client key file for the targets.
				keySecret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}

				// Maximum acceptable TLS version.
				//
				// It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
				maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"

				// Minimum acceptable TLS version.
				//
				// It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
				minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"

				// Used to verify the hostname for the targets.
				serverName?: string
			}

			// `tokenURL` configures the URL to fetch the token from.
			tokenUrl!: strings.MinRunes(1)
		}

		// Default port to scrape metrics from.
		port?: uint16

		// ProxyConnectHeader optionally specifies headers to send to
		// proxies during CONNECT requests.
		//
		// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
		// Thanos >= v0.32.0.
		proxyConnectHeader?: {
			[string]: [...{
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}]
		}

		// Whether to use the proxy configuration defined by environment
		// variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).
		//
		// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
		// Thanos >= v0.32.0.
		proxyFromEnvironment?: bool

		// `proxyURL` defines the HTTP proxy server to use.
		proxyUrl?: =~"^(http|https|socks5)://.+$"

		// Time after which the linode instances are refreshed.
		refreshInterval?: =~"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$"

		// Optional region to filter on.
		region?: strings.MinRunes(1)

		// The string by which Linode Instance tags are joined into the
		// tag label.
		tagSeparator?: strings.MinRunes(1)

		// TLS configuration applying to the target HTTP endpoint.
		tlsConfig?: {
			// Certificate authority used when verifying server certificates.
			ca?: {
				// ConfigMap containing data to use for the targets.
				configMap?: {
					// The key to select.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the ConfigMap or its key must be defined
					optional?: bool
				}

				// Secret containing data to use for the targets.
				secret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}
			}

			// Client certificate to present when doing client-authentication.
			cert?: {
				// ConfigMap containing data to use for the targets.
				configMap?: {
					// The key to select.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the ConfigMap or its key must be defined
					optional?: bool
				}

				// Secret containing data to use for the targets.
				secret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}
			}

			// Disable target certificate validation.
			insecureSkipVerify?: bool

			// Secret containing the client key file for the targets.
			keySecret?: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}

			// Maximum acceptable TLS version.
			//
			// It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
			maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"

			// Minimum acceptable TLS version.
			//
			// It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
			minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"

			// Used to verify the hostname for the targets.
			serverName?: string
		}
	}]

	// MetricRelabelConfigs to apply to samples before ingestion.
	metricRelabelings?: [...{
		// Action to perform based on the regex matching.
		//
		// `Uppercase` and `Lowercase` actions require Prometheus >=
		// v2.36.0.
		// `DropEqual` and `KeepEqual` actions require Prometheus >=
		// v2.41.0.
		//
		// Default: "Replace"
		action?: "replace" | "Replace" | "keep" | "Keep" | "drop" | "Drop" | "hashmod" | "HashMod" | "labelmap" | "LabelMap" | "labeldrop" | "LabelDrop" | "labelkeep" | "LabelKeep" | "lowercase" | "Lowercase" | "uppercase" | "Uppercase" | "keepequal" | "KeepEqual" | "dropequal" | "DropEqual"

		// Modulus to take of the hash of the source label values.
		//
		// Only applicable when the action is `HashMod`.
		modulus?: int64

		// Regular expression against which the extracted value is
		// matched.
		regex?: string

		// Replacement value against which a Replace action is performed
		// if the
		// regular expression matches.
		//
		// Regex capture groups are available.
		replacement?: string

		// Separator is the string between concatenated SourceLabels.
		separator?: string

		// The source labels select values from existing labels. Their
		// content is
		// concatenated using the configured Separator and matched against
		// the
		// configured regular expression.
		sourceLabels?: [...=~"^[a-zA-Z_][a-zA-Z0-9_]*$"]

		// Label to which the resulting string is written in a
		// replacement.
		//
		// It is mandatory for `Replace`, `HashMod`, `Lowercase`,
		// `Uppercase`,
		// `KeepEqual` and `DropEqual` actions.
		//
		// Regex capture groups are available.
		targetLabel?: string
	}] & [_, ...]

	// MetricsPath HTTP path to scrape for metrics. If empty,
	// Prometheus uses the default value (e.g. /metrics).
	metricsPath?: strings.MinRunes(1)

	// Metric name escaping mode to request through content
	// negotiation.
	//
	// It requires Prometheus >= v3.4.0.
	nameEscapingScheme?: "AllowUTF8" | "Underscores" | "Dots" | "Values"

	// Specifies the validation scheme for metric and label names.
	//
	// It requires Prometheus >= v3.0.0.
	nameValidationScheme?: "UTF8" | "Legacy"

	// If there are more than this many buckets in a native histogram,
	// buckets will be merged to stay within the limit.
	// It requires Prometheus >= v2.45.0.
	nativeHistogramBucketLimit?: int64

	// If the growth factor of one bucket to the next is smaller than
	// this,
	// buckets will be merged to increase the factor sufficiently.
	// It requires Prometheus >= v2.50.0.
	nativeHistogramMinBucketFactor?: matchN(>=1, [int, string]) & (number | =~"^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$")

	// `noProxy` is a comma-separated string that can contain IPs,
	// CIDR notation, domain names
	// that should be excluded from proxying. IP and domain names can
	// contain port numbers.
	//
	// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
	// Thanos >= v0.32.0.
	noProxy?: string

	// NomadSDConfigs defines a list of Nomad service discovery
	// configurations.
	nomadSDConfigs?: [...{
		// The information to access the Nomad API. It is to be defined
		// as the Nomad documentation requires.
		allowStale?: bool

		// Authorization header to use on every scrape request.
		authorization?: {
			// Selects a key of a Secret in the namespace that contains the
			// credentials for authentication.
			credentials?: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}

			// Defines the authentication type. The value is case-insensitive.
			//
			// "Basic" is not a supported value.
			//
			// Default: "Bearer"
			type?: string
		}

		// BasicAuth information to use on every scrape request.
		basicAuth?: {
			// `password` specifies a key of a Secret containing the password
			// for
			// authentication.
			password?: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}

			// `username` specifies a key of a Secret containing the username
			// for
			// authentication.
			username?: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}
		}

		// Whether to enable HTTP2.
		enableHTTP2?: bool

		// Configure whether HTTP requests follow HTTP 3xx redirects.
		followRedirects?: bool
		namespace?:       string

		// `noProxy` is a comma-separated string that can contain IPs,
		// CIDR notation, domain names
		// that should be excluded from proxying. IP and domain names can
		// contain port numbers.
		//
		// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
		// Thanos >= v0.32.0.
		noProxy?: string

		// Optional OAuth 2.0 configuration.
		// Cannot be set at the same time as `authorization` or
		// `basic_auth`.
		oauth2?: {
			// `clientId` specifies a key of a Secret or ConfigMap containing
			// the
			// OAuth2 client's ID.
			clientId!: {
				// ConfigMap containing data to use for the targets.
				configMap?: {
					// The key to select.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the ConfigMap or its key must be defined
					optional?: bool
				}

				// Secret containing data to use for the targets.
				secret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}
			}

			// `clientSecret` specifies a key of a Secret containing the
			// OAuth2
			// client's secret.
			clientSecret!: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}

			// `endpointParams` configures the HTTP parameters to append to
			// the token
			// URL.
			endpointParams?: {
				[string]: string
			}

			// `noProxy` is a comma-separated string that can contain IPs,
			// CIDR notation, domain names
			// that should be excluded from proxying. IP and domain names can
			// contain port numbers.
			//
			// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
			// Thanos >= v0.32.0.
			noProxy?: string

			// ProxyConnectHeader optionally specifies headers to send to
			// proxies during CONNECT requests.
			//
			// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
			// Thanos >= v0.32.0.
			proxyConnectHeader?: {
				[string]: [...{
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}]
			}

			// Whether to use the proxy configuration defined by environment
			// variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).
			//
			// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
			// Thanos >= v0.32.0.
			proxyFromEnvironment?: bool

			// `proxyURL` defines the HTTP proxy server to use.
			proxyUrl?: =~"^(http|https|socks5)://.+$"

			// `scopes` defines the OAuth2 scopes used for the token request.
			scopes?: [...string]

			// TLS configuration to use when connecting to the OAuth2 server.
			// It requires Prometheus >= v2.43.0.
			tlsConfig?: {
				// Certificate authority used when verifying server certificates.
				ca?: {
					// ConfigMap containing data to use for the targets.
					configMap?: {
						// The key to select.
						key!: string

						// Name of the referent.
						// This field is effectively required, but due to backwards
						// compatibility is
						// allowed to be empty. Instances of this type with an empty value
						// here are
						// almost certainly wrong.
						// More info:
						// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
						name?: string

						// Specify whether the ConfigMap or its key must be defined
						optional?: bool
					}

					// Secret containing data to use for the targets.
					secret?: {
						// The key of the secret to select from. Must be a valid secret
						// key.
						key!: string

						// Name of the referent.
						// This field is effectively required, but due to backwards
						// compatibility is
						// allowed to be empty. Instances of this type with an empty value
						// here are
						// almost certainly wrong.
						// More info:
						// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
						name?: string

						// Specify whether the Secret or its key must be defined
						optional?: bool
					}
				}

				// Client certificate to present when doing client-authentication.
				cert?: {
					// ConfigMap containing data to use for the targets.
					configMap?: {
						// The key to select.
						key!: string

						// Name of the referent.
						// This field is effectively required, but due to backwards
						// compatibility is
						// allowed to be empty. Instances of this type with an empty value
						// here are
						// almost certainly wrong.
						// More info:
						// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
						name?: string

						// Specify whether the ConfigMap or its key must be defined
						optional?: bool
					}

					// Secret containing data to use for the targets.
					secret?: {
						// The key of the secret to select from. Must be a valid secret
						// key.
						key!: string

						// Name of the referent.
						// This field is effectively required, but due to backwards
						// compatibility is
						// allowed to be empty. Instances of this type with an empty value
						// here are
						// almost certainly wrong.
						// More info:
						// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
						name?: string

						// Specify whether the Secret or its key must be defined
						optional?: bool
					}
				}

				// Disable target certificate validation.
				insecureSkipVerify?: bool

				// Secret containing the client key file for the targets.
				keySecret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}

				// Maximum acceptable TLS version.
				//
				// It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
				maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"

				// Minimum acceptable TLS version.
				//
				// It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
				minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"

				// Used to verify the hostname for the targets.
				serverName?: string
			}

			// `tokenURL` configures the URL to fetch the token from.
			tokenUrl!: strings.MinRunes(1)
		}

		// ProxyConnectHeader optionally specifies headers to send to
		// proxies during CONNECT requests.
		//
		// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
		// Thanos >= v0.32.0.
		proxyConnectHeader?: {
			[string]: [...{
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}]
		}

		// Whether to use the proxy configuration defined by environment
		// variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).
		//
		// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
		// Thanos >= v0.32.0.
		proxyFromEnvironment?: bool

		// `proxyURL` defines the HTTP proxy server to use.
		proxyUrl?: =~"^(http|https|socks5)://.+$"

		// Duration is a valid time duration that can be parsed by
		// Prometheus model.ParseDuration() function.
		// Supported units: y, w, d, h, m, s, ms
		// Examples: `30s`, `1m`, `1h20m15s`, `15d`
		refreshInterval?: =~"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$"
		region?:          string
		server!:          strings.MinRunes(1)
		tagSeparator?:    string

		// TLS configuration applying to the target HTTP endpoint.
		tlsConfig?: {
			// Certificate authority used when verifying server certificates.
			ca?: {
				// ConfigMap containing data to use for the targets.
				configMap?: {
					// The key to select.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the ConfigMap or its key must be defined
					optional?: bool
				}

				// Secret containing data to use for the targets.
				secret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}
			}

			// Client certificate to present when doing client-authentication.
			cert?: {
				// ConfigMap containing data to use for the targets.
				configMap?: {
					// The key to select.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the ConfigMap or its key must be defined
					optional?: bool
				}

				// Secret containing data to use for the targets.
				secret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}
			}

			// Disable target certificate validation.
			insecureSkipVerify?: bool

			// Secret containing the client key file for the targets.
			keySecret?: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}

			// Maximum acceptable TLS version.
			//
			// It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
			maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"

			// Minimum acceptable TLS version.
			//
			// It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
			minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"

			// Used to verify the hostname for the targets.
			serverName?: string
		}
	}]

	// OAuth2 configuration to use on every scrape request.
	oauth2?: {
		// `clientId` specifies a key of a Secret or ConfigMap containing
		// the
		// OAuth2 client's ID.
		clientId!: {
			// ConfigMap containing data to use for the targets.
			configMap?: {
				// The key to select.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the ConfigMap or its key must be defined
				optional?: bool
			}

			// Secret containing data to use for the targets.
			secret?: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}
		}

		// `clientSecret` specifies a key of a Secret containing the
		// OAuth2
		// client's secret.
		clientSecret!: {
			// The key of the secret to select from. Must be a valid secret
			// key.
			key!: string

			// Name of the referent.
			// This field is effectively required, but due to backwards
			// compatibility is
			// allowed to be empty. Instances of this type with an empty value
			// here are
			// almost certainly wrong.
			// More info:
			// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
			name?: string

			// Specify whether the Secret or its key must be defined
			optional?: bool
		}

		// `endpointParams` configures the HTTP parameters to append to
		// the token
		// URL.
		endpointParams?: {
			[string]: string
		}

		// `noProxy` is a comma-separated string that can contain IPs,
		// CIDR notation, domain names
		// that should be excluded from proxying. IP and domain names can
		// contain port numbers.
		//
		// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
		// Thanos >= v0.32.0.
		noProxy?: string

		// ProxyConnectHeader optionally specifies headers to send to
		// proxies during CONNECT requests.
		//
		// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
		// Thanos >= v0.32.0.
		proxyConnectHeader?: {
			[string]: [...{
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}]
		}

		// Whether to use the proxy configuration defined by environment
		// variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).
		//
		// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
		// Thanos >= v0.32.0.
		proxyFromEnvironment?: bool

		// `proxyURL` defines the HTTP proxy server to use.
		proxyUrl?: =~"^(http|https|socks5)://.+$"

		// `scopes` defines the OAuth2 scopes used for the token request.
		scopes?: [...string]

		// TLS configuration to use when connecting to the OAuth2 server.
		// It requires Prometheus >= v2.43.0.
		tlsConfig?: {
			// Certificate authority used when verifying server certificates.
			ca?: {
				// ConfigMap containing data to use for the targets.
				configMap?: {
					// The key to select.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the ConfigMap or its key must be defined
					optional?: bool
				}

				// Secret containing data to use for the targets.
				secret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}
			}

			// Client certificate to present when doing client-authentication.
			cert?: {
				// ConfigMap containing data to use for the targets.
				configMap?: {
					// The key to select.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the ConfigMap or its key must be defined
					optional?: bool
				}

				// Secret containing data to use for the targets.
				secret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}
			}

			// Disable target certificate validation.
			insecureSkipVerify?: bool

			// Secret containing the client key file for the targets.
			keySecret?: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}

			// Maximum acceptable TLS version.
			//
			// It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
			maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"

			// Minimum acceptable TLS version.
			//
			// It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
			minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"

			// Used to verify the hostname for the targets.
			serverName?: string
		}

		// `tokenURL` configures the URL to fetch the token from.
		tokenUrl!: strings.MinRunes(1)
	}

	// OpenStackSDConfigs defines a list of OpenStack service
	// discovery configurations.
	openstackSDConfigs?: [...{
		// Whether the service discovery should list all instances for all
		// projects.
		// It is only relevant for the 'instance' role and usually
		// requires admin permissions.
		allTenants?: bool

		// ApplicationCredentialID
		applicationCredentialId?: string

		// The ApplicationCredentialID or ApplicationCredentialName fields
		// are
		// required if using an application credential to authenticate.
		// Some providers
		// allow you to create an application credential to authenticate
		// rather than a
		// password.
		applicationCredentialName?: strings.MinRunes(1)

		// The applicationCredentialSecret field is required if using an
		// application
		// credential to authenticate.
		applicationCredentialSecret?: {
			// The key of the secret to select from. Must be a valid secret
			// key.
			key!: string

			// Name of the referent.
			// This field is effectively required, but due to backwards
			// compatibility is
			// allowed to be empty. Instances of this type with an empty value
			// here are
			// almost certainly wrong.
			// More info:
			// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
			name?: string

			// Specify whether the Secret or its key must be defined
			optional?: bool
		}

		// Availability of the endpoint to connect to.
		availability?: "Public" | "public" | "Admin" | "admin" | "Internal" | "internal"

		// DomainID
		domainID?: strings.MinRunes(1)

		// At most one of domainId and domainName must be provided if
		// using username
		// with Identity V3. Otherwise, either are optional.
		domainName?: strings.MinRunes(1)

		// IdentityEndpoint specifies the HTTP endpoint that is required
		// to work with
		// the Identity API of the appropriate version.
		identityEndpoint?: =~"^http(s)?:\\/\\/.+$"

		// Password for the Identity V2 and V3 APIs. Consult with your
		// provider's
		// control panel to discover your account's preferred method of
		// authentication.
		password?: {
			// The key of the secret to select from. Must be a valid secret
			// key.
			key!: string

			// Name of the referent.
			// This field is effectively required, but due to backwards
			// compatibility is
			// allowed to be empty. Instances of this type with an empty value
			// here are
			// almost certainly wrong.
			// More info:
			// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
			name?: string

			// Specify whether the Secret or its key must be defined
			optional?: bool
		}

		// The port to scrape metrics from. If using the public IP
		// address, this must
		// instead be specified in the relabeling rule.
		port?: uint16

		// ProjectID
		projectID?: strings.MinRunes(1)

		// The ProjectId and ProjectName fields are optional for the
		// Identity V2 API.
		// Some providers allow you to specify a ProjectName instead of
		// the ProjectId.
		// Some require both. Your provider's authentication policies will
		// determine
		// how these fields influence authentication.
		projectName?: strings.MinRunes(1)

		// Refresh interval to re-read the instance list.
		refreshInterval?: =~"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$"

		// The OpenStack Region.
		region!: strings.MinRunes(1)

		// The OpenStack role of entities that should be discovered.
		//
		// Note: The `LoadBalancer` role requires Prometheus >= v3.2.0.
		role!: "Instance" | "Hypervisor" | "LoadBalancer"

		// TLS configuration applying to the target HTTP endpoint.
		tlsConfig?: {
			// Certificate authority used when verifying server certificates.
			ca?: {
				// ConfigMap containing data to use for the targets.
				configMap?: {
					// The key to select.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the ConfigMap or its key must be defined
					optional?: bool
				}

				// Secret containing data to use for the targets.
				secret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}
			}

			// Client certificate to present when doing client-authentication.
			cert?: {
				// ConfigMap containing data to use for the targets.
				configMap?: {
					// The key to select.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the ConfigMap or its key must be defined
					optional?: bool
				}

				// Secret containing data to use for the targets.
				secret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}
			}

			// Disable target certificate validation.
			insecureSkipVerify?: bool

			// Secret containing the client key file for the targets.
			keySecret?: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}

			// Maximum acceptable TLS version.
			//
			// It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
			maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"

			// Minimum acceptable TLS version.
			//
			// It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
			minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"

			// Used to verify the hostname for the targets.
			serverName?: string
		}

		// UserID
		userid?: strings.MinRunes(1)

		// Username is required if using Identity V2 API. Consult with
		// your provider's
		// control panel to discover your account's username.
		// In Identity V3, either userid or a combination of username
		// and domainId or domainName are needed
		username?: strings.MinRunes(1)
	}]

	// OVHCloudSDConfigs defines a list of OVHcloud service discovery
	// configurations.
	ovhcloudSDConfigs?: [...{
		// Access key to use. https://api.ovh.com.
		applicationKey!: strings.MinRunes(1)

		// SecretKeySelector selects a key of a Secret.
		applicationSecret!: {
			// The key of the secret to select from. Must be a valid secret
			// key.
			key!: string

			// Name of the referent.
			// This field is effectively required, but due to backwards
			// compatibility is
			// allowed to be empty. Instances of this type with an empty value
			// here are
			// almost certainly wrong.
			// More info:
			// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
			name?: string

			// Specify whether the Secret or its key must be defined
			optional?: bool
		}

		// SecretKeySelector selects a key of a Secret.
		consumerKey!: {
			// The key of the secret to select from. Must be a valid secret
			// key.
			key!: string

			// Name of the referent.
			// This field is effectively required, but due to backwards
			// compatibility is
			// allowed to be empty. Instances of this type with an empty value
			// here are
			// almost certainly wrong.
			// More info:
			// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
			name?: string

			// Specify whether the Secret or its key must be defined
			optional?: bool
		}

		// Custom endpoint to be used.
		endpoint?: strings.MinRunes(1)

		// Refresh interval to re-read the resources list.
		refreshInterval?: =~"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$"

		// Service of the targets to retrieve. Must be `VPS` or
		// `DedicatedServer`.
		service!: matchN(2, ["VPS" | "DedicatedServer", "VPS" | "DedicatedServer"])
	}]

	// Optional HTTP URL parameters
	params?: {
		[string]: [...string]
	}

	// ProxyConnectHeader optionally specifies headers to send to
	// proxies during CONNECT requests.
	//
	// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
	// Thanos >= v0.32.0.
	proxyConnectHeader?: {
		[string]: [...{
			// The key of the secret to select from. Must be a valid secret
			// key.
			key!: string

			// Name of the referent.
			// This field is effectively required, but due to backwards
			// compatibility is
			// allowed to be empty. Instances of this type with an empty value
			// here are
			// almost certainly wrong.
			// More info:
			// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
			name?: string

			// Specify whether the Secret or its key must be defined
			optional?: bool
		}]
	}

	// Whether to use the proxy configuration defined by environment
	// variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).
	//
	// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
	// Thanos >= v0.32.0.
	proxyFromEnvironment?: bool

	// `proxyURL` defines the HTTP proxy server to use.
	proxyUrl?: =~"^(http|https|socks5)://.+$"

	// PuppetDBSDConfigs defines a list of PuppetDB service discovery
	// configurations.
	puppetDBSDConfigs?: [...{
		// Optional `authorization` HTTP header configuration.
		// Cannot be set at the same time as `basicAuth`, or `oauth2`.
		authorization?: {
			// Selects a key of a Secret in the namespace that contains the
			// credentials for authentication.
			credentials?: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}

			// Defines the authentication type. The value is case-insensitive.
			//
			// "Basic" is not a supported value.
			//
			// Default: "Bearer"
			type?: string
		}

		// Optional HTTP basic authentication information.
		// Cannot be set at the same time as `authorization`, or `oauth2`.
		basicAuth?: {
			// `password` specifies a key of a Secret containing the password
			// for
			// authentication.
			password?: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}

			// `username` specifies a key of a Secret containing the username
			// for
			// authentication.
			username?: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}
		}

		// Configure whether to enable HTTP2.
		enableHTTP2?: bool

		// Configure whether the HTTP requests should follow HTTP 3xx
		// redirects.
		followRedirects?: bool

		// Whether to include the parameters as meta labels.
		// Note: Enabling this exposes parameters in the Prometheus UI and
		// API. Make sure
		// that you don't have secrets exposed as parameters if you enable
		// this.
		includeParameters?: bool

		// `noProxy` is a comma-separated string that can contain IPs,
		// CIDR notation, domain names
		// that should be excluded from proxying. IP and domain names can
		// contain port numbers.
		//
		// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
		// Thanos >= v0.32.0.
		noProxy?: string

		// Optional OAuth2.0 configuration.
		// Cannot be set at the same time as `basicAuth`, or
		// `authorization`.
		oauth2?: {
			// `clientId` specifies a key of a Secret or ConfigMap containing
			// the
			// OAuth2 client's ID.
			clientId!: {
				// ConfigMap containing data to use for the targets.
				configMap?: {
					// The key to select.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the ConfigMap or its key must be defined
					optional?: bool
				}

				// Secret containing data to use for the targets.
				secret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}
			}

			// `clientSecret` specifies a key of a Secret containing the
			// OAuth2
			// client's secret.
			clientSecret!: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}

			// `endpointParams` configures the HTTP parameters to append to
			// the token
			// URL.
			endpointParams?: {
				[string]: string
			}

			// `noProxy` is a comma-separated string that can contain IPs,
			// CIDR notation, domain names
			// that should be excluded from proxying. IP and domain names can
			// contain port numbers.
			//
			// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
			// Thanos >= v0.32.0.
			noProxy?: string

			// ProxyConnectHeader optionally specifies headers to send to
			// proxies during CONNECT requests.
			//
			// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
			// Thanos >= v0.32.0.
			proxyConnectHeader?: {
				[string]: [...{
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}]
			}

			// Whether to use the proxy configuration defined by environment
			// variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).
			//
			// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
			// Thanos >= v0.32.0.
			proxyFromEnvironment?: bool

			// `proxyURL` defines the HTTP proxy server to use.
			proxyUrl?: =~"^(http|https|socks5)://.+$"

			// `scopes` defines the OAuth2 scopes used for the token request.
			scopes?: [...string]

			// TLS configuration to use when connecting to the OAuth2 server.
			// It requires Prometheus >= v2.43.0.
			tlsConfig?: {
				// Certificate authority used when verifying server certificates.
				ca?: {
					// ConfigMap containing data to use for the targets.
					configMap?: {
						// The key to select.
						key!: string

						// Name of the referent.
						// This field is effectively required, but due to backwards
						// compatibility is
						// allowed to be empty. Instances of this type with an empty value
						// here are
						// almost certainly wrong.
						// More info:
						// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
						name?: string

						// Specify whether the ConfigMap or its key must be defined
						optional?: bool
					}

					// Secret containing data to use for the targets.
					secret?: {
						// The key of the secret to select from. Must be a valid secret
						// key.
						key!: string

						// Name of the referent.
						// This field is effectively required, but due to backwards
						// compatibility is
						// allowed to be empty. Instances of this type with an empty value
						// here are
						// almost certainly wrong.
						// More info:
						// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
						name?: string

						// Specify whether the Secret or its key must be defined
						optional?: bool
					}
				}

				// Client certificate to present when doing client-authentication.
				cert?: {
					// ConfigMap containing data to use for the targets.
					configMap?: {
						// The key to select.
						key!: string

						// Name of the referent.
						// This field is effectively required, but due to backwards
						// compatibility is
						// allowed to be empty. Instances of this type with an empty value
						// here are
						// almost certainly wrong.
						// More info:
						// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
						name?: string

						// Specify whether the ConfigMap or its key must be defined
						optional?: bool
					}

					// Secret containing data to use for the targets.
					secret?: {
						// The key of the secret to select from. Must be a valid secret
						// key.
						key!: string

						// Name of the referent.
						// This field is effectively required, but due to backwards
						// compatibility is
						// allowed to be empty. Instances of this type with an empty value
						// here are
						// almost certainly wrong.
						// More info:
						// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
						name?: string

						// Specify whether the Secret or its key must be defined
						optional?: bool
					}
				}

				// Disable target certificate validation.
				insecureSkipVerify?: bool

				// Secret containing the client key file for the targets.
				keySecret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}

				// Maximum acceptable TLS version.
				//
				// It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
				maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"

				// Minimum acceptable TLS version.
				//
				// It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
				minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"

				// Used to verify the hostname for the targets.
				serverName?: string
			}

			// `tokenURL` configures the URL to fetch the token from.
			tokenUrl!: strings.MinRunes(1)
		}

		// Port to scrape the metrics from.
		port?: uint16

		// ProxyConnectHeader optionally specifies headers to send to
		// proxies during CONNECT requests.
		//
		// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
		// Thanos >= v0.32.0.
		proxyConnectHeader?: {
			[string]: [...{
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}]
		}

		// Whether to use the proxy configuration defined by environment
		// variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).
		//
		// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
		// Thanos >= v0.32.0.
		proxyFromEnvironment?: bool

		// `proxyURL` defines the HTTP proxy server to use.
		proxyUrl?: =~"^(http|https|socks5)://.+$"

		// Puppet Query Language (PQL) query. Only resources are
		// supported.
		// https://puppet.com/docs/puppetdb/latest/api/query/v4/pql.html
		query!: strings.MinRunes(1)

		// Refresh interval to re-read the list of resources.
		refreshInterval?: =~"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$"

		// TLS configuration to connect to the Puppet DB.
		tlsConfig?: {
			// Certificate authority used when verifying server certificates.
			ca?: {
				// ConfigMap containing data to use for the targets.
				configMap?: {
					// The key to select.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the ConfigMap or its key must be defined
					optional?: bool
				}

				// Secret containing data to use for the targets.
				secret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}
			}

			// Client certificate to present when doing client-authentication.
			cert?: {
				// ConfigMap containing data to use for the targets.
				configMap?: {
					// The key to select.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the ConfigMap or its key must be defined
					optional?: bool
				}

				// Secret containing data to use for the targets.
				secret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}
			}

			// Disable target certificate validation.
			insecureSkipVerify?: bool

			// Secret containing the client key file for the targets.
			keySecret?: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}

			// Maximum acceptable TLS version.
			//
			// It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
			maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"

			// Minimum acceptable TLS version.
			//
			// It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
			minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"

			// Used to verify the hostname for the targets.
			serverName?: string
		}

		// The URL of the PuppetDB root query endpoint.
		url!: strings.MinRunes(1) & {
			=~"^http(s)?://.+$"
		}
	}]

	// RelabelConfigs defines how to rewrite the target's labels
	// before scraping.
	// Prometheus Operator automatically adds relabelings for a few
	// standard Kubernetes fields.
	// The original scrape job's name is available via the
	// `__tmp_prometheus_job_name` label.
	// More info:
	// https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config
	relabelings?: [...{
		// Action to perform based on the regex matching.
		//
		// `Uppercase` and `Lowercase` actions require Prometheus >=
		// v2.36.0.
		// `DropEqual` and `KeepEqual` actions require Prometheus >=
		// v2.41.0.
		//
		// Default: "Replace"
		action?: "replace" | "Replace" | "keep" | "Keep" | "drop" | "Drop" | "hashmod" | "HashMod" | "labelmap" | "LabelMap" | "labeldrop" | "LabelDrop" | "labelkeep" | "LabelKeep" | "lowercase" | "Lowercase" | "uppercase" | "Uppercase" | "keepequal" | "KeepEqual" | "dropequal" | "DropEqual"

		// Modulus to take of the hash of the source label values.
		//
		// Only applicable when the action is `HashMod`.
		modulus?: int64

		// Regular expression against which the extracted value is
		// matched.
		regex?: string

		// Replacement value against which a Replace action is performed
		// if the
		// regular expression matches.
		//
		// Regex capture groups are available.
		replacement?: string

		// Separator is the string between concatenated SourceLabels.
		separator?: string

		// The source labels select values from existing labels. Their
		// content is
		// concatenated using the configured Separator and matched against
		// the
		// configured regular expression.
		sourceLabels?: [...=~"^[a-zA-Z_][a-zA-Z0-9_]*$"]

		// Label to which the resulting string is written in a
		// replacement.
		//
		// It is mandatory for `Replace`, `HashMod`, `Lowercase`,
		// `Uppercase`,
		// `KeepEqual` and `DropEqual` actions.
		//
		// Regex capture groups are available.
		targetLabel?: string
	}] & [_, ...]

	// SampleLimit defines per-scrape limit on number of scraped
	// samples that will be accepted.
	sampleLimit?: int64

	// ScalewaySDConfigs defines a list of Scaleway instances and
	// baremetal service discovery configurations.
	scalewaySDConfigs?: [...{
		// Access key to use.
		// https://console.scaleway.com/project/credentials
		accessKey!: strings.MinRunes(1)

		// API URL to use when doing the server listing requests.
		apiURL?: =~"^http(s)?://.+$"

		// Whether to enable HTTP2.
		enableHTTP2?: bool

		// Configure whether HTTP requests follow HTTP 3xx redirects.
		followRedirects?: bool

		// NameFilter specify a name filter (works as a LIKE) to apply on
		// the server listing request.
		nameFilter?: strings.MinRunes(1)

		// `noProxy` is a comma-separated string that can contain IPs,
		// CIDR notation, domain names
		// that should be excluded from proxying. IP and domain names can
		// contain port numbers.
		//
		// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
		// Thanos >= v0.32.0.
		noProxy?: string

		// The port to scrape metrics from.
		port?: uint16

		// Project ID of the targets.
		projectID!: strings.MinRunes(1)

		// ProxyConnectHeader optionally specifies headers to send to
		// proxies during CONNECT requests.
		//
		// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
		// Thanos >= v0.32.0.
		proxyConnectHeader?: {
			[string]: [...{
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}]
		}

		// Whether to use the proxy configuration defined by environment
		// variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).
		//
		// It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or
		// Thanos >= v0.32.0.
		proxyFromEnvironment?: bool

		// `proxyURL` defines the HTTP proxy server to use.
		proxyUrl?: =~"^(http|https|socks5)://.+$"

		// Refresh interval to re-read the list of instances.
		refreshInterval?: =~"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$"

		// Service of the targets to retrieve. Must be `Instance` or
		// `Baremetal`.
		role!: "Instance" | "Baremetal"

		// Secret key to use when listing targets.
		secretKey!: {
			// The key of the secret to select from. Must be a valid secret
			// key.
			key!: string

			// Name of the referent.
			// This field is effectively required, but due to backwards
			// compatibility is
			// allowed to be empty. Instances of this type with an empty value
			// here are
			// almost certainly wrong.
			// More info:
			// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
			name?: string

			// Specify whether the Secret or its key must be defined
			optional?: bool
		}

		// TagsFilter specify a tag filter (a server needs to have all
		// defined tags to be listed) to apply on the server listing
		// request.
		tagsFilter?: [...strings.MinRunes(1)] & [_, ...]

		// TLS configuration to use on every scrape request
		tlsConfig?: {
			// Certificate authority used when verifying server certificates.
			ca?: {
				// ConfigMap containing data to use for the targets.
				configMap?: {
					// The key to select.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the ConfigMap or its key must be defined
					optional?: bool
				}

				// Secret containing data to use for the targets.
				secret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}
			}

			// Client certificate to present when doing client-authentication.
			cert?: {
				// ConfigMap containing data to use for the targets.
				configMap?: {
					// The key to select.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the ConfigMap or its key must be defined
					optional?: bool
				}

				// Secret containing data to use for the targets.
				secret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key!: string

					// Name of the referent.
					// This field is effectively required, but due to backwards
					// compatibility is
					// allowed to be empty. Instances of this type with an empty value
					// here are
					// almost certainly wrong.
					// More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}
			}

			// Disable target certificate validation.
			insecureSkipVerify?: bool

			// Secret containing the client key file for the targets.
			keySecret?: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}

			// Maximum acceptable TLS version.
			//
			// It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
			maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"

			// Minimum acceptable TLS version.
			//
			// It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
			minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"

			// Used to verify the hostname for the targets.
			serverName?: string
		}

		// Zone is the availability zone of your targets (e.g. fr-par-1).
		zone?: strings.MinRunes(1)
	}]

	// Configures the protocol scheme used for requests.
	// If empty, Prometheus uses HTTP by default.
	scheme?: "HTTP" | "HTTPS"

	// The scrape class to apply.
	scrapeClass?: strings.MinRunes(1)

	// Whether to scrape a classic histogram that is also exposed as a
	// native histogram.
	// It requires Prometheus >= v2.45.0.
	//
	// Notice: `scrapeClassicHistograms` corresponds to the
	// `always_scrape_classic_histograms` field in the Prometheus
	// configuration.
	scrapeClassicHistograms?: bool

	// ScrapeInterval is the interval between consecutive scrapes.
	scrapeInterval?: =~"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$"

	// The protocols to negotiate during a scrape. It tells clients
	// the
	// protocols supported by Prometheus in order of preference (from
	// most to least preferred).
	//
	// If unset, Prometheus uses its default value.
	//
	// It requires Prometheus >= v2.49.0.
	scrapeProtocols?: [..."PrometheusProto" | "OpenMetricsText0.0.1" | "OpenMetricsText1.0.0" | "PrometheusText0.0.4" | "PrometheusText1.0.0"] & [_, ...]

	// ScrapeTimeout is the number of seconds to wait until a scrape
	// request times out.
	// The value cannot be greater than the scrape interval otherwise
	// the operator will reject the resource.
	scrapeTimeout?: =~"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$"

	// StaticConfigs defines a list of static targets with a common
	// label set.
	staticConfigs?: [...{
		// Labels assigned to all metrics scraped from the targets.
		labels?: {
			[string]: string
		}

		// List of targets for this static configuration.
		targets!: [...string] & [_, ...]
	}]

	// TargetLimit defines a limit on the number of scraped targets
	// that will be accepted.
	targetLimit?: int64

	// TLS configuration to use on every scrape request
	tlsConfig?: {
		// Certificate authority used when verifying server certificates.
		ca?: {
			// ConfigMap containing data to use for the targets.
			configMap?: {
				// The key to select.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the ConfigMap or its key must be defined
				optional?: bool
			}

			// Secret containing data to use for the targets.
			secret?: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}
		}

		// Client certificate to present when doing client-authentication.
		cert?: {
			// ConfigMap containing data to use for the targets.
			configMap?: {
				// The key to select.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the ConfigMap or its key must be defined
				optional?: bool
			}

			// Secret containing data to use for the targets.
			secret?: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key!: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}
		}

		// Disable target certificate validation.
		insecureSkipVerify?: bool

		// Secret containing the client key file for the targets.
		keySecret?: {
			// The key of the secret to select from. Must be a valid secret
			// key.
			key!: string

			// Name of the referent.
			// This field is effectively required, but due to backwards
			// compatibility is
			// allowed to be empty. Instances of this type with an empty value
			// here are
			// almost certainly wrong.
			// More info:
			// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
			name?: string

			// Specify whether the Secret or its key must be defined
			optional?: bool
		}

		// Maximum acceptable TLS version.
		//
		// It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
		maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"

		// Minimum acceptable TLS version.
		//
		// It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
		minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"

		// Used to verify the hostname for the targets.
		serverName?: string
	}

	// TrackTimestampsStaleness whether Prometheus tracks staleness of
	// the metrics that have an explicit timestamp present in scraped
	// data.
	// Has no effect if `honorTimestamps` is false.
	// It requires Prometheus >= v2.48.0.
	trackTimestampsStaleness?: bool
}
