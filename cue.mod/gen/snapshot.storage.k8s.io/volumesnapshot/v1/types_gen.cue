// Code generated by timoni. DO NOT EDIT.

//timoni:generate timoni mod vendor crd -f https://raw.githubusercontent.com/kubernetes-csi/external-snapshotter/master/client/config/crd/snapshot.storage.k8s.io_volumesnapshots.yaml

package v1

import "strings"

// VolumeSnapshot is a user's request for either creating a
// point-in-time
// snapshot of a persistent volume, or binding to a pre-existing
// snapshot.
#VolumeSnapshot: {
	// APIVersion defines the versioned schema of this representation
	// of an object.
	// Servers should convert recognized schemas to the latest
	// internal value, and
	// may reject unrecognized values.
	// More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	apiVersion: "snapshot.storage.k8s.io/v1"

	// Kind is a string value representing the REST resource this
	// object represents.
	// Servers may infer this from the endpoint the client submits
	// requests to.
	// Cannot be updated.
	// In CamelCase.
	// More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	kind: "VolumeSnapshot"
	metadata!: {
		name!: strings.MaxRunes(253) & strings.MinRunes(1) & {
			string
		}
		namespace!: strings.MaxRunes(63) & strings.MinRunes(1) & {
			string
		}
		labels?: {
			[string]: string
		}
		annotations?: {
			[string]: string
		}
	}

	// spec defines the desired characteristics of a snapshot
	// requested by a user.
	// More info:
	// https://kubernetes.io/docs/concepts/storage/volume-snapshots#volumesnapshots
	// Required.
	spec!: #VolumeSnapshotSpec
}

// spec defines the desired characteristics of a snapshot
// requested by a user.
// More info:
// https://kubernetes.io/docs/concepts/storage/volume-snapshots#volumesnapshots
// Required.
#VolumeSnapshotSpec: {
	// source specifies where a snapshot will be created from.
	// This field is immutable after creation.
	// Required.
	source!: {
		// persistentVolumeClaimName specifies the name of the
		// PersistentVolumeClaim
		// object representing the volume from which a snapshot should be
		// created.
		// This PVC is assumed to be in the same namespace as the
		// VolumeSnapshot
		// object.
		// This field should be set if the snapshot does not exists, and
		// needs to be
		// created.
		// This field is immutable.
		persistentVolumeClaimName?: string

		// volumeSnapshotContentName specifies the name of a pre-existing
		// VolumeSnapshotContent
		// object representing an existing volume snapshot.
		// This field should be set if the snapshot already exists and
		// only needs a representation in Kubernetes.
		// This field is immutable.
		volumeSnapshotContentName?: string
	}

	// VolumeSnapshotClassName is the name of the VolumeSnapshotClass
	// requested by the VolumeSnapshot.
	// VolumeSnapshotClassName may be left nil to indicate that the
	// default
	// SnapshotClass should be used.
	// A given cluster may have multiple default Volume
	// SnapshotClasses: one
	// default per CSI Driver. If a VolumeSnapshot does not specify a
	// SnapshotClass,
	// VolumeSnapshotSource will be checked to figure out what the
	// associated
	// CSI Driver is, and the default VolumeSnapshotClass associated
	// with that
	// CSI Driver will be used. If more than one VolumeSnapshotClass
	// exist for
	// a given CSI Driver and more than one have been marked as
	// default,
	// CreateSnapshot will fail and generate an event.
	// Empty string is not allowed for this field.
	volumeSnapshotClassName?: string
}
