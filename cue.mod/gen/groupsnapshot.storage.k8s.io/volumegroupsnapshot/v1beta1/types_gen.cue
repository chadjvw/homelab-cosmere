// Code generated by timoni. DO NOT EDIT.

//timoni:generate timoni mod vendor crd -f https://raw.githubusercontent.com/kubernetes-csi/external-snapshotter/master/client/config/crd/groupsnapshot.storage.k8s.io_volumegroupsnapshots.yaml

package v1beta1

import "strings"

// VolumeGroupSnapshot is a user's request for creating either a
// point-in-time
// group snapshot or binding to a pre-existing group snapshot.
#VolumeGroupSnapshot: {
	// APIVersion defines the versioned schema of this representation
	// of an object.
	// Servers should convert recognized schemas to the latest
	// internal value, and
	// may reject unrecognized values.
	// More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	apiVersion: "groupsnapshot.storage.k8s.io/v1beta1"

	// Kind is a string value representing the REST resource this
	// object represents.
	// Servers may infer this from the endpoint the client submits
	// requests to.
	// Cannot be updated.
	// In CamelCase.
	// More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	kind: "VolumeGroupSnapshot"
	metadata!: {
		name!: strings.MaxRunes(253) & strings.MinRunes(1) & {
			string
		}
		namespace!: strings.MaxRunes(63) & strings.MinRunes(1) & {
			string
		}
		labels?: {
			[string]: string
		}
		annotations?: {
			[string]: string
		}
	}

	// Spec defines the desired characteristics of a group snapshot
	// requested by a user.
	// Required.
	spec!: #VolumeGroupSnapshotSpec
}

// Spec defines the desired characteristics of a group snapshot
// requested by a user.
// Required.
#VolumeGroupSnapshotSpec: {
	// Source specifies where a group snapshot will be created from.
	// This field is immutable after creation.
	// Required.
	source!: {
		// Selector is a label query over persistent volume claims that
		// are to be
		// grouped together for snapshotting.
		// This labelSelector will be used to match the label added to a
		// PVC.
		// If the label is added or removed to a volume after a group
		// snapshot
		// is created, the existing group snapshots won't be modified.
		// Once a VolumeGroupSnapshotContent is created and the sidecar
		// starts to process
		// it, the volume list will not change with retries.
		selector?: {
			// matchExpressions is a list of label selector requirements. The
			// requirements are ANDed.
			matchExpressions?: [...{
				// key is the label key that the selector applies to.
				key!: string

				// operator represents a key's relationship to a set of values.
				// Valid operators are In, NotIn, Exists and DoesNotExist.
				operator!: string

				// values is an array of string values. If the operator is In or
				// NotIn,
				// the values array must be non-empty. If the operator is Exists
				// or DoesNotExist,
				// the values array must be empty. This array is replaced during a
				// strategic
				// merge patch.
				values?: [...string]
			}]

			// matchLabels is a map of {key,value} pairs. A single {key,value}
			// in the matchLabels
			// map is equivalent to an element of matchExpressions, whose key
			// field is "key", the
			// operator is "In", and the values array contains only "value".
			// The requirements are ANDed.
			matchLabels?: {
				[string]: string
			}
		}

		// VolumeGroupSnapshotContentName specifies the name of a
		// pre-existing VolumeGroupSnapshotContent
		// object representing an existing volume group snapshot.
		// This field should be set if the volume group snapshot already
		// exists and
		// only needs a representation in Kubernetes.
		// This field is immutable.
		volumeGroupSnapshotContentName?: string
	}

	// VolumeGroupSnapshotClassName is the name of the
	// VolumeGroupSnapshotClass
	// requested by the VolumeGroupSnapshot.
	// VolumeGroupSnapshotClassName may be left nil to indicate that
	// the default
	// class will be used.
	// Empty string is not allowed for this field.
	volumeGroupSnapshotClassName?: string
}
