// Code generated by timoni. DO NOT EDIT.

//timoni:generate timoni mod vendor crd -f https://raw.githubusercontent.com/kubernetes-csi/external-snapshotter/master/client/config/crd/groupsnapshot.storage.k8s.io_volumegroupsnapshotclasses.yaml

package v1beta2

import "strings"

// VolumeGroupSnapshotClass specifies parameters that a underlying
// storage system
// uses when creating a volume group snapshot. A specific
// VolumeGroupSnapshotClass
// is used by specifying its name in a VolumeGroupSnapshot object.
// VolumeGroupSnapshotClasses are non-namespaced.
#VolumeGroupSnapshotClass: {
	// APIVersion defines the versioned schema of this representation
	// of an object.
	// Servers should convert recognized schemas to the latest
	// internal value, and
	// may reject unrecognized values.
	// More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	apiVersion: "groupsnapshot.storage.k8s.io/v1beta2"

	// DeletionPolicy determines whether a VolumeGroupSnapshotContent
	// created
	// through the VolumeGroupSnapshotClass should be deleted when its
	// bound
	// VolumeGroupSnapshot is deleted.
	// Supported values are "Retain" and "Delete".
	// "Retain" means that the VolumeGroupSnapshotContent and its
	// physical group
	// snapshot on underlying storage system are kept.
	// "Delete" means that the VolumeGroupSnapshotContent and its
	// physical group
	// snapshot on underlying storage system are deleted.
	// Required.
	deletionPolicy!: "Delete" | "Retain"

	// Driver is the name of the storage driver expected to handle
	// this VolumeGroupSnapshotClass.
	// Required.
	driver!: string

	// Kind is a string value representing the REST resource this
	// object represents.
	// Servers may infer this from the endpoint the client submits
	// requests to.
	// Cannot be updated.
	// In CamelCase.
	// More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	kind: "VolumeGroupSnapshotClass"
	metadata!: {
		name!: strings.MaxRunes(253) & strings.MinRunes(1) & {
			string
		}
		namespace?: strings.MaxRunes(63) & strings.MinRunes(1) & {
			string
		}
		labels?: {
			[string]: string
		}
		annotations?: {
			[string]: string
		}
	}

	// Parameters is a key-value map with storage driver specific
	// parameters for
	// creating group snapshots.
	// These values are opaque to Kubernetes and are passed directly
	// to the driver.
	parameters?: {
		[string]: string
	}
}
