// Code generated by timoni. DO NOT EDIT.

//timoni:generate timoni mod vendor crd -f dns-controller.yaml

package v1alpha1

import (
	"strings"
	"list"
)

#DNSProvider: {
	// APIVersion defines the versioned schema of this representation
	// of an object.
	// Servers should convert recognized schemas to the latest
	// internal value, and
	// may reject unrecognized values.
	// More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	apiVersion: "dns.gardener.cloud/v1alpha1"

	// Kind is a string value representing the REST resource this
	// object represents.
	// Servers may infer this from the endpoint the client submits
	// requests to.
	// Cannot be updated.
	// In CamelCase.
	// More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	kind: "DNSProvider"
	metadata!: {
		name!: strings.MaxRunes(253) & strings.MinRunes(1) & {
			string
		}
		namespace!: strings.MaxRunes(63) & strings.MinRunes(1) & {
			string
		}
		labels?: {
			[string]: string
		}
		annotations?: {
			[string]: string
		}
	}
	spec!: #DNSProviderSpec
}
#DNSProviderSpec: {
	// default TTL used for DNS entries if not specified explicitly
	defaultTTL?: uint & >=1 & <=8640000

	// desired selection of usable domains
	// (by default all zones and domains in those zones will be
	// served)
	domains?: {
		// values that should be ignored (domains or zones)
		exclude?: list.MaxItems(100) & [...strings.MinRunes(1)]

		// values that should be observed (domains or zones)
		include?: list.MaxItems(100) & [...strings.MinRunes(1)]
	}

	// optional additional provider specific configuration values
	providerConfig?: {
		...
	}

	// rate limit for create/update operations on DNSEntries assigned
	// to this provider
	rateLimit?: {
		// Burst allows bursts of up to 'burst' to exceed the rate defined
		// by 'RequestsPerDay', while still maintaining a
		// smoothed rate of 'RequestsPerDay'
		burst!: int & >=0

		// RequestsPerDay is create/update request rate per DNS entry
		// given by requests per day
		requestsPerDay!: int & >=1
	}

	// access credential for the external DNS system of the given type
	secretRef?: {
		// name is unique within a namespace to reference a secret
		// resource.
		name?: string

		// namespace defines the space within which the secret name must
		// be unique.
		namespace?: string
	}

	// type of the provider (selecting the responsible type of DNS
	// controller)
	type?: "aws-route53" | "alicloud-dns" | "azure-dns" | "azure-private-dns" | "cloudflare-dns" | "gdch-dns" | "google-clouddns" | "infoblox-dns" | "local" | "mock-inmemory" | "netlify-dns" | "openstack-designate" | "powerdns" | "remote" | "rfc2136"

	// desired selection of usable domains
	// the domain selection is used for served zones, only
	// (by default all zones will be served)
	zones?: {
		// values that should be ignored (domains or zones)
		exclude?: list.MaxItems(100) & [...strings.MinRunes(1)]

		// values that should be observed (domains or zones)
		include?: list.MaxItems(100) & [...strings.MinRunes(1)]
	}
}
