// Code generated by timoni. DO NOT EDIT.

//timoni:generate timoni mod vendor crd -f dns-controller.yaml

package v1alpha1

import "strings"

#DNSHostedZonePolicy: {
	// APIVersion defines the versioned schema of this representation
	// of an object.
	// Servers should convert recognized schemas to the latest
	// internal value, and
	// may reject unrecognized values.
	// More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	apiVersion: "dns.gardener.cloud/v1alpha1"

	// Kind is a string value representing the REST resource this
	// object represents.
	// Servers may infer this from the endpoint the client submits
	// requests to.
	// Cannot be updated.
	// In CamelCase.
	// More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	kind: "DNSHostedZonePolicy"
	metadata!: {
		name!: strings.MaxRunes(253) & strings.MinRunes(1) & {
			string
		}
		namespace?: strings.MaxRunes(63) & strings.MinRunes(1) & {
			string
		}
		labels?: {
			[string]: string
		}
		annotations?: {
			[string]: string
		}
	}
	spec!: #DNSHostedZonePolicySpec
}
#DNSHostedZonePolicySpec: {
	policy!: {
		// ZoneStateCacheTTL specifies the TTL for the zone state cache
		zoneStateCacheTTL?: string
	}

	// ZoneSelector specifies the selector for the DNS hosted zones
	selector!: {
		// DomainNames selects by base domain name of hosted zone.
		// Policy will be applied to zones with matching base domain
		domainNames?: [...string]

		// ProviderTypes selects by provider types
		providerTypes?: [...string]

		// ZoneIDs selects by provider dependent zone ID
		zoneIDs?: [...string]
	}
}
